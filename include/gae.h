/* gae.h
   Generated by wsdl2h 2.8.6 from http://10.6.10.21/g-language.wsdl and typemap.dat
   2012-08-26 07:22:03 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on gae.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://10.6.10.21/GLANG                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://10.6.10.21/GLANG"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://10.6.10.21/GLANG"
//gsoap ns1   schema namespace:	http://10.6.10.21/GLANG
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://10.6.10.21/GLANG                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://10.6.10.21/GLANG                                                  *
 *                                                                            *
\******************************************************************************/


/// "http://10.6.10.21/GLANG":Definition is a complexType.
struct ns1__Definition
{
/// Element entry of type xs:string.
    char*                                entry                          1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":codon_mvaInputParams is a complexType.
struct ns1__codon_USCOREmvaInputParams
{
/// Element parameter of type xs:string.
    char*                                parameter                      1;	///< Required element.
/// Element naxis of type xs:int.
    int                                  naxis                          1;	///< Required element.
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element data of type xs:string.
    char*                                data                           1;	///< Required element.
/// Element method of type xs:string.
    char*                                method                         1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":P2InputParams is a complexType.
struct ns1__P2InputParams
{
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":w_valueInputParams is a complexType.
struct ns1__w_USCOREvalueInputParams
{
/// Element include of type xs:string.
    char*                                include                        1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element exclude of type xs:string.
    char*                                exclude                        1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":find_ori_terInputParams is a complexType.
struct ns1__find_USCOREori_USCOREterInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element filter of type xs:int.
    int                                  filter                         1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":consensus_zInputParams is a complexType.
struct ns1__consensus_USCOREzInputParams
{
/// Element high of type xs:int.
    int                                  high                           1;	///< Required element.
/// Element low of type xs:double.
    double                               low                            1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":genome_mapInputParams is a complexType.
struct ns1__genome_USCOREmapInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element name of type xs:int.
    int                                  name                           1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element amp of type xs:double.
    double                               amp                            1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":rep_ori_terInputParams is a complexType.
struct ns1__rep_USCOREori_USCOREterInputParams
{
/// Element oriloc of type xs:int.
    int                                  oriloc                         1;	///< Required element.
/// Element gcskew of type xs:int.
    int                                  gcskew                         1;	///< Required element.
/// Element dif-threshold of type xs:int.
    int                                  dif_threshold                  1;	///< Required element.
/// Element dbonly of type xs:int.
    int                                  dbonly                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":DoubleHelixInputParams is a complexType.
struct ns1__DoubleHelixInputParams
{
/// Element speed of type xs:double.
    double                               speed                          1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":plasmid_mapInputParams is a complexType.
struct ns1__plasmid_USCOREmapInputParams
{
/// Element ptt of type xs:string.
    char*                                ptt                            1;	///< Required element.
/// Element cgi of type xs:int.
    int                                  cgi                            1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":base_entropyInputParams is a complexType.
struct ns1__base_USCOREentropyInputParams
{
/// Element upstream of type xs:int.
    int                                  upstream                       1;	///< Required element.
/// Element position of type xs:string.
    char*                                position                       1;	///< Required element.
/// Element downstream of type xs:int.
    int                                  downstream                     1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element PatLength of type xs:int.
    int                                  PatLength                      1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":nucleotide_periodicityInputParams is a complexType.
struct ns1__nucleotide_USCOREperiodicityInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element nucleotide of type xs:string.
    char*                                nucleotide                     1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":to_fastaInputParams is a complexType.
struct ns1__to_USCOREfastaInputParams
{
/// Element length of type xs:int.
    int                                  length                         1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":find_difInputParams is a complexType.
struct ns1__find_USCOREdifInputParams
{
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":cbiInputParams is a complexType.
struct ns1__cbiInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":genes_from_oriInputParams is a complexType.
struct ns1__genes_USCOREfrom_USCOREoriInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":geneskewInputParams is a complexType.
struct ns1__geneskewInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element slide of type xs:int.
    int                                  slide                          1;	///< Required element.
/// Element cumulative of type xs:int.
    int                                  cumulative                     1;	///< Required element.
/// Element base of type xs:string.
    char*                                base                           1;	///< Required element.
/// Element gc3 of type xs:int.
    int                                  gc3                            1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":corInputParams is a complexType.
struct ns1__corInputParams
{
/// Element sorted of type xs:int.
    int                                  sorted                         1;	///< Required element.
/// Element method of type xs:string.
    char*                                method                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":delta_gcskewInputParams is a complexType.
struct ns1__delta_USCOREgcskewInputParams
{
/// Element method of type xs:string.
    char*                                method                         1;	///< Required element.
/// Element at of type xs:int.
    int                                  at                             1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":molecular_weightInputParams is a complexType.
struct ns1__molecular_USCOREweightInputParams
{
/// Element strand of type xs:string.
    char*                                strand                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":circular_mapInputParams is a complexType.
struct ns1__circular_USCOREmapInputParams
{
/// Element gmap of type xs:int.
    int                                  gmap                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":gcskewInputParams is a complexType.
struct ns1__gcskewInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element slide of type xs:int.
    int                                  slide                          1;	///< Required element.
/// Element cumulative of type xs:int.
    int                                  cumulative                     1;	///< Required element.
/// Element at of type xs:int.
    int                                  at                             1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":genome_map3InputParams is a complexType.
struct ns1__genome_USCOREmap3InputParams
{
/// Element width of type xs:int.
    int                                  width                          1;	///< Required element.
/// Element datafilename of type xs:string.
    char*                                datafilename                   1;	///< Required element.
/// Element gmap of type xs:int.
    int                                  gmap                           1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element height of type xs:int.
    int                                  height                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":signatureInputParams is a complexType.
struct ns1__signatureInputParams
{
/// Element wordlength of type xs:int.
    int                                  wordlength                     1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element start of type xs:int.
    int                                  start                          1;	///< Required element.
/// Element end of type xs:int.
    int                                  end                            1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":togoWSInputParams is a complexType.
struct ns1__togoWSInputParams
{
/// Element search of type xs:string.
    char*                                search                         1;	///< Required element.
/// Element db of type xs:string.
    char*                                db                             1;	///< Required element.
/// Element format of type xs:string.
    char*                                format                         1;	///< Required element.
/// Element field of type xs:string.
    char*                                field                          1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":base_information_contentInputParams is a complexType.
struct ns1__base_USCOREinformation_USCOREcontentInputParams
{
/// Element upstream of type xs:int.
    int                                  upstream                       1;	///< Required element.
/// Element position of type xs:string.
    char*                                position                       1;	///< Required element.
/// Element downstream of type xs:int.
    int                                  downstream                     1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element PatLength of type xs:int.
    int                                  PatLength                      1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":dnawalkInputParams is a complexType.
struct ns1__dnawalkInputParams
{
/// Element gmap of type xs:int.
    int                                  gmap                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":find_terInputParams is a complexType.
struct ns1__find_USCOREterInputParams
{
/// Element -type of type xs:string.
    char*                                _x002dtype                     1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":shuffleseqInputParams is a complexType.
struct ns1__shuffleseqInputParams
{
/// Element k of type xs:int.
    int                                  k                              1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":phxInputParams is a complexType.
struct ns1__phxInputParams
{
/// Element usage of type xs:string.
    char*                                usage                          1;	///< Required element.
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":oligomer_searchInputParams is a complexType.
struct ns1__oligomer_USCOREsearchInputParams
{
/// Element return of type xs:string.
    char*                                return_                        1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":find_patternInputParams is a complexType.
struct ns1__find_USCOREpatternInputParams
{
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":gcwinInputParams is a complexType.
struct ns1__gcwinInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element at of type xs:int.
    int                                  at                             1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element application of type xs:string.
    char*                                application                    1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":icdiInputParams is a complexType.
struct ns1__icdiInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":encInputParams is a complexType.
struct ns1__encInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":oligomer_counterInputParams is a complexType.
struct ns1__oligomer_USCOREcounterInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":fopInputParams is a complexType.
struct ns1__fopInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":buiInputParams is a complexType.
struct ns1__buiInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element position of type xs:string.
    char*                                position                       1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":dist_in_ccInputParams is a complexType.
struct ns1__dist_USCOREin_USCOREccInputParams
{
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":codon_usageInputParams is a complexType.
struct ns1__codon_USCOREusageInputParams
{
/// Element version of type xs:int.
    int                                  version                        1;	///< Required element.
/// Element CDSid of type xs:string.
    char*                                CDSid                          1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":find_dnaAboxInputParams is a complexType.
struct ns1__find_USCOREdnaAboxInputParams
{
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":ttestInputParams is a complexType.
struct ns1__ttestInputParams
{
/// Element paired of type xs:int.
    int                                  paired                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":seq2pngInputParams is a complexType.
struct ns1__seq2pngInputParams
{
/// Element width of type xs:int.
    int                                  width                          1;	///< Required element.
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":amino_counterInputParams is a complexType.
struct ns1__amino_USCOREcounterInputParams
{
/// Element CDSid of type xs:string.
    char*                                CDSid                          1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":aauiInputParams is a complexType.
struct ns1__aauiInputParams
{
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":codon_compilerInputParams is a complexType.
struct ns1__codon_USCOREcompilerInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element startcodon of type xs:int.
    int                                  startcodon                     1;	///< Required element.
/// Element stopcodon of type xs:int.
    int                                  stopcodon                      1;	///< Required element.
/// Element data of type xs:string.
    char*                                data                           1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":over_lapping_finderInputParams is a complexType.
struct ns1__over_USCORElapping_USCOREfinderInputParams
{
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":find_iteronInputParams is a complexType.
struct ns1__find_USCOREiteronInputParams
{
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":EwInputParams is a complexType.
struct ns1__EwInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":codon_counterInputParams is a complexType.
struct ns1__codon_USCOREcounterInputParams
{
/// Element CDSid of type xs:string.
    char*                                CDSid                          1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":view_cdsInputParams is a complexType.
struct ns1__view_USCOREcdsInputParams
{
/// Element length of type xs:int.
    int                                  length                         1;	///< Required element.
/// Element gap of type xs:int.
    int                                  gap                            1;	///< Required element.
/// Element application of type xs:string.
    char*                                application                    1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":base_relative_entropyInputParams is a complexType.
struct ns1__base_USCORErelative_USCOREentropyInputParams
{
/// Element upstream of type xs:int.
    int                                  upstream                       1;	///< Required element.
/// Element position of type xs:string.
    char*                                position                       1;	///< Required element.
/// Element downstream of type xs:int.
    int                                  downstream                     1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element PatLength of type xs:int.
    int                                  PatLength                      1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":palindromeInputParams is a complexType.
struct ns1__palindromeInputParams
{
/// Element gtmatch of type xs:int.
    int                                  gtmatch                        1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element loop of type xs:int.
    int                                  loop                           1;	///< Required element.
/// Element shortest of type xs:int.
    int                                  shortest                       1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":genomicskewInputParams is a complexType.
struct ns1__genomicskewInputParams
{
/// Element divide of type xs:int.
    int                                  divide                         1;	///< Required element.
/// Element at of type xs:int.
    int                                  at                             1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":query_strandInputParams is a complexType.
struct ns1__query_USCOREstrandInputParams
{
/// Element direction of type xs:string.
    char*                                direction                      1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":gcsiInputParams is a complexType.
struct ns1__gcsiInputParams
{
/// Element p of type xs:int.
    int                                  p                              1;	///< Required element.
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element version of type xs:int.
    int                                  version                        1;	///< Required element.
/// Element purine of type xs:int.
    int                                  purine                         1;	///< Required element.
/// Element at of type xs:int.
    int                                  at                             1;	///< Required element.
/// Element keto of type xs:int.
    int                                  keto                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":filter_cds_by_atgInputParams is a complexType.
struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams
{
/// Element upstream of type xs:int.
    int                                  upstream                       1;	///< Required element.
/// Element codon of type xs:string.
    char*                                codon                          1;	///< Required element.
/// Element downstream of type xs:int.
    int                                  downstream                     1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":caiInputParams is a complexType.
struct ns1__caiInputParams
{
/// Element w_output of type xs:string.
    char*                                w_USCOREoutput                 1;	///< Required element.
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element w_filename of type xs:string.
    char*                                w_USCOREfilename               1;	///< Required element.
/// Element w_absent of type xs:string.
    char*                                w_USCOREabsent                 1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":dinucInputParams is a complexType.
struct ns1__dinucInputParams
{
/// Element translate of type xs:int.
    int                                  translate                      1;	///< Required element.
/// Element position of type xs:string.
    char*                                position                       1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element del_key of type xs:string.
    char*                                del_USCOREkey                  1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":cgrInputParams is a complexType.
struct ns1__cgrInputParams
{
/// Element width of type xs:int.
    int                                  width                          1;	///< Required element.
/// Element level of type xs:int.
    int                                  level                          1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":grapherInputParams is a complexType.
struct ns1__grapherInputParams
{
/// Element x of type xs:string.
    char*                                x                              1;	///< Required element.
/// Element y of type xs:string.
    char*                                y                              1;	///< Required element.
/// Element filename of type xs:string.
    char*                                filename                       1;	///< Required element.
/// Element title of type xs:string.
    char*                                title                          1;	///< Required element.
/// Element style of type xs:string.
    char*                                style                          1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
};

/// "http://10.6.10.21/GLANG":arrayIn is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
struct arrayIn
{
/// Pointer to array of char*.
    char*                               *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "http://10.6.10.21/GLANG":arrayOut is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
struct arrayOut
{
/// Pointer to array of char*.
    char*                               *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://10.6.10.21/GLANG                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://10.6.10.21/GLANG                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	GLANGSoapBinding 
//gsoap ns1  service type:	GLANG 
//gsoap ns1  service port:	http://10.6.10.21/WS/g-language.cgi 
//gsoap ns1  service namespace:	http://10.6.10.21/GLANG 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage GLANG Definitions

@section GLANG_bindings Service Bindings

  - @ref GLANGSoapBinding

@section GLANG_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page GLANGSoapBinding Binding "GLANGSoapBinding"

@section GLANGSoapBinding_operations Operations of Binding  "GLANGSoapBinding"

  - @ref ns1__codon_USCOREmva

  - @ref ns1__P2

  - @ref ns1__w_USCOREvalue

  - @ref ns1__splitprintseq

  - @ref ns1__median

  - @ref ns1__find_USCOREori_USCOREter

  - @ref ns1__plasmid_USCOREmap

  - @ref ns1__sum

  - @ref ns1__nucleotide_USCOREperiodicity

  - @ref ns1__variance

  - @ref ns1__amino_USCOREinfo

  - @ref ns1__circular_USCOREmap

  - @ref ns1__togoWS

  - @ref ns1__translate

  - @ref ns1__phx

  - @ref ns1__icdi

  - @ref ns1__enc

  - @ref ns1__fop

  - @ref ns1__bui

  - @ref ns1__dist_USCOREin_USCOREcc

  - @ref ns1__find_USCOREdnaAbox

  - @ref ns1__ttest

  - @ref ns1__seq2png

  - @ref ns1__amino_USCOREcounter

  - @ref ns1__aaui

  - @ref ns1__codon_USCOREcompiler

  - @ref ns1__over_USCORElapping_USCOREfinder

  - @ref ns1__Ew

  - @ref ns1__base_USCORErelative_USCOREentropy

  - @ref ns1__view_USCOREcds

  - @ref ns1__query_USCOREstrand

  - @ref ns1__genomicskew

  - @ref ns1__filter_USCOREcds_USCOREby_USCOREatg

  - @ref ns1__gcsi

  - @ref ns1__cai

  - @ref ns1__maxdex

  - @ref ns1__max

  - @ref ns1__query_USCOREarm

  - @ref ns1__mindex

  - @ref ns1__peptide_USCOREmass

  - @ref ns1__consensus_USCOREz

  - @ref ns1__genome_USCOREmap

  - @ref ns1__longest_USCOREORF

  - @ref ns1__rep_USCOREori_USCOREter

  - @ref ns1__calc_USCOREpI

  - @ref ns1__DoubleHelix

  - @ref ns1__base_USCOREentropy

  - @ref ns1__to_USCOREfasta

  - @ref ns1__find_USCOREdif

  - @ref ns1__cbi

  - @ref ns1__genes_USCOREfrom_USCOREori

  - @ref ns1__geneskew

  - @ref ns1__standard_USCOREdeviation

  - @ref ns1__cor

  - @ref ns1__cumulative

  - @ref ns1__delta_USCOREenc

  - @ref ns1__delta_USCOREgcskew

  - @ref ns1__molecular_USCOREweight

  - @ref ns1__gcskew

  - @ref ns1__genome_USCOREmap3

  - @ref ns1__seqinfo

  - @ref ns1__signature

  - @ref ns1__base_USCOREinformation_USCOREcontent

  - @ref ns1__dnawalk

  - @ref ns1__find_USCOREter

  - @ref ns1__shuffleseq

  - @ref ns1__oligomer_USCOREsearch

  - @ref ns1__find_USCOREpattern

  - @ref ns1__gcwin

  - @ref ns1__oligomer_USCOREcounter

  - @ref ns1__codon_USCOREusage

  - @ref ns1__min

  - @ref ns1__find_USCOREiteron

  - @ref ns1__complement

  - @ref ns1__mean

  - @ref ns1__codon_USCOREcounter

  - @ref ns1__entrez

  - @ref ns1__palindrome

  - @ref ns1__least_USCOREsquares_USCOREfit

  - @ref ns1__dinuc

  - @ref ns1__cgr

  - @ref ns1__grapher

  - @ref ns1__help

  - @ref ns1__hydropathy

  - @ref ns1__pubmed

@section GLANGSoapBinding_ports Endpoints of Binding  "GLANGSoapBinding"

  - http://10.6.10.21/WS/g-language.cgi

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   GLANGSoapBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__codon_USCOREmva                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__codon_USCOREmva" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#codon_mva"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/codon_mvaRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/codon_mvaResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__codon_USCOREmva(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREmvaInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__codon_USCOREmva(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREmvaInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	codon_USCOREmva rpc
//gsoap ns1  service method-encoding:	codon_USCOREmva http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	codon_USCOREmva http://10.6.10.21/GLANG#codon_mva
//gsoap ns1  service method-output-action:	codon_USCOREmva http://10.6.10.21/GLANG/GLANG/codon_mvaResponse
int ns1__codon_USCOREmva(
    char*                               _sequence,	///< Request parameter
    struct ns1__codon_USCOREmvaInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__P2                                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__P2" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#P2"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/P2Request"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/P2Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__P2(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__P2InputParams*          params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__P2(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__P2InputParams*          params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	P2 rpc
//gsoap ns1  service method-encoding:	P2 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	P2 http://10.6.10.21/GLANG#P2
//gsoap ns1  service method-output-action:	P2 http://10.6.10.21/GLANG/GLANG/P2Response
int ns1__P2(
    char*                               _sequence,	///< Request parameter
    struct ns1__P2InputParams*          _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__w_USCOREvalue                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__w_USCOREvalue" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#w_value"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/w_valueRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/w_valueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__w_USCOREvalue(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__w_USCOREvalueInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__w_USCOREvalue(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__w_USCOREvalueInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	w_USCOREvalue rpc
//gsoap ns1  service method-encoding:	w_USCOREvalue http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	w_USCOREvalue http://10.6.10.21/GLANG#w_value
//gsoap ns1  service method-output-action:	w_USCOREvalue http://10.6.10.21/GLANG/GLANG/w_valueResponse
int ns1__w_USCOREvalue(
    char*                               _sequence,	///< Request parameter
    struct ns1__w_USCOREvalueInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__splitprintseq                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__splitprintseq" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#splitprintseq"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/splitprintseqRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/splitprintseqResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__splitprintseq(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__splitprintseq(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	splitprintseq rpc
//gsoap ns1  service method-encoding:	splitprintseq http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	splitprintseq http://10.6.10.21/GLANG#splitprintseq
//gsoap ns1  service method-output-action:	splitprintseq http://10.6.10.21/GLANG/GLANG/splitprintseqResponse
int ns1__splitprintseq(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__median                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__median" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#median"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/medianRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/medianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__median(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__median(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	median rpc
//gsoap ns1  service method-encoding:	median http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	median http://10.6.10.21/GLANG#median
//gsoap ns1  service method-output-action:	median http://10.6.10.21/GLANG/GLANG/medianResponse
int ns1__median(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__find_USCOREori_USCOREter                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__find_USCOREori_USCOREter" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#find_ori_ter"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/find_ori_terRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/find_ori_terResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__find_USCOREori_USCOREter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREori_USCOREterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__find_USCOREori_USCOREter(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREori_USCOREterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	find_USCOREori_USCOREter rpc
//gsoap ns1  service method-encoding:	find_USCOREori_USCOREter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	find_USCOREori_USCOREter http://10.6.10.21/GLANG#find_ori_ter
//gsoap ns1  service method-output-action:	find_USCOREori_USCOREter http://10.6.10.21/GLANG/GLANG/find_ori_terResponse
int ns1__find_USCOREori_USCOREter(
    char*                               _sequence,	///< Request parameter
    struct ns1__find_USCOREori_USCOREterInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__plasmid_USCOREmap                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__plasmid_USCOREmap" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#plasmid_map"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/plasmid_mapRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/plasmid_mapResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__plasmid_USCOREmap(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__plasmid_USCOREmapInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__plasmid_USCOREmap(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__plasmid_USCOREmapInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	plasmid_USCOREmap rpc
//gsoap ns1  service method-encoding:	plasmid_USCOREmap http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	plasmid_USCOREmap http://10.6.10.21/GLANG#plasmid_map
//gsoap ns1  service method-output-action:	plasmid_USCOREmap http://10.6.10.21/GLANG/GLANG/plasmid_mapResponse
int ns1__plasmid_USCOREmap(
    char*                               _sequence,	///< Request parameter
    struct ns1__plasmid_USCOREmapInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__sum                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__sum" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#sum"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/sumRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/sumResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__sum(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__sum(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	sum rpc
//gsoap ns1  service method-encoding:	sum http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	sum http://10.6.10.21/GLANG#sum
//gsoap ns1  service method-output-action:	sum http://10.6.10.21/GLANG/GLANG/sumResponse
int ns1__sum(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__nucleotide_USCOREperiodicity                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__nucleotide_USCOREperiodicity" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#nucleotide_periodicity"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/nucleotide_periodicityRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/nucleotide_periodicityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__nucleotide_USCOREperiodicity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__nucleotide_USCOREperiodicityInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__nucleotide_USCOREperiodicity(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__nucleotide_USCOREperiodicityInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	nucleotide_USCOREperiodicity rpc
//gsoap ns1  service method-encoding:	nucleotide_USCOREperiodicity http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	nucleotide_USCOREperiodicity http://10.6.10.21/GLANG#nucleotide_periodicity
//gsoap ns1  service method-output-action:	nucleotide_USCOREperiodicity http://10.6.10.21/GLANG/GLANG/nucleotide_periodicityResponse
int ns1__nucleotide_USCOREperiodicity(
    char*                               _sequence,	///< Request parameter
    struct ns1__nucleotide_USCOREperiodicityInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__variance                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__variance" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#variance"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/varianceRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/varianceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__variance(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__variance(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	variance rpc
//gsoap ns1  service method-encoding:	variance http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	variance http://10.6.10.21/GLANG#variance
//gsoap ns1  service method-output-action:	variance http://10.6.10.21/GLANG/GLANG/varianceResponse
int ns1__variance(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__amino_USCOREinfo                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__amino_USCOREinfo" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#amino_info"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/amino_infoRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/amino_infoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__amino_USCOREinfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__amino_USCOREinfo(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	amino_USCOREinfo rpc
//gsoap ns1  service method-encoding:	amino_USCOREinfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	amino_USCOREinfo http://10.6.10.21/GLANG#amino_info
//gsoap ns1  service method-output-action:	amino_USCOREinfo http://10.6.10.21/GLANG/GLANG/amino_infoResponse
int ns1__amino_USCOREinfo(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__circular_USCOREmap                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__circular_USCOREmap" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#circular_map"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/circular_mapRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/circular_mapResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__circular_USCOREmap(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__circular_USCOREmapInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__circular_USCOREmap(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__circular_USCOREmapInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	circular_USCOREmap rpc
//gsoap ns1  service method-encoding:	circular_USCOREmap http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	circular_USCOREmap http://10.6.10.21/GLANG#circular_map
//gsoap ns1  service method-output-action:	circular_USCOREmap http://10.6.10.21/GLANG/GLANG/circular_mapResponse
int ns1__circular_USCOREmap(
    char*                               _sequence,	///< Request parameter
    struct ns1__circular_USCOREmapInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__togoWS                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__togoWS" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#togoWS"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/togoWSRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/togoWSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__togoWS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               query,
    struct ns1__togoWSInputParams*      params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__togoWS(
    struct soap *soap,
    // request parameters:
    char*                               query,
    struct ns1__togoWSInputParams*      params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	togoWS rpc
//gsoap ns1  service method-encoding:	togoWS http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	togoWS http://10.6.10.21/GLANG#togoWS
//gsoap ns1  service method-output-action:	togoWS http://10.6.10.21/GLANG/GLANG/togoWSResponse
int ns1__togoWS(
    char*                               _query,	///< Request parameter
    struct ns1__togoWSInputParams*      _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__translate                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__translate" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#translate"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/translateRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/translateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__translate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__translate(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	translate rpc
//gsoap ns1  service method-encoding:	translate http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	translate http://10.6.10.21/GLANG#translate
//gsoap ns1  service method-output-action:	translate http://10.6.10.21/GLANG/GLANG/translateResponse
int ns1__translate(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__phx                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__phx" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#phx"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/phxRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/phxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__phx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__phxInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__phx(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__phxInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	phx rpc
//gsoap ns1  service method-encoding:	phx http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	phx http://10.6.10.21/GLANG#phx
//gsoap ns1  service method-output-action:	phx http://10.6.10.21/GLANG/GLANG/phxResponse
int ns1__phx(
    char*                               _sequence,	///< Request parameter
    struct ns1__phxInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__icdi                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__icdi" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#icdi"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/icdiRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/icdiResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__icdi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__icdiInputParams*        params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__icdi(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__icdiInputParams*        params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	icdi rpc
//gsoap ns1  service method-encoding:	icdi http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	icdi http://10.6.10.21/GLANG#icdi
//gsoap ns1  service method-output-action:	icdi http://10.6.10.21/GLANG/GLANG/icdiResponse
int ns1__icdi(
    char*                               _sequence,	///< Request parameter
    struct ns1__icdiInputParams*        _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__enc                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__enc" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#enc"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/encRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/encResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__enc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__encInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__enc(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__encInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	enc rpc
//gsoap ns1  service method-encoding:	enc http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	enc http://10.6.10.21/GLANG#enc
//gsoap ns1  service method-output-action:	enc http://10.6.10.21/GLANG/GLANG/encResponse
int ns1__enc(
    char*                               _sequence,	///< Request parameter
    struct ns1__encInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__fop                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__fop" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#fop"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/fopRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/fopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__fop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__fopInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__fop(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__fopInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	fop rpc
//gsoap ns1  service method-encoding:	fop http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	fop http://10.6.10.21/GLANG#fop
//gsoap ns1  service method-output-action:	fop http://10.6.10.21/GLANG/GLANG/fopResponse
int ns1__fop(
    char*                               _sequence,	///< Request parameter
    struct ns1__fopInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__bui                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__bui" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#bui"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/buiRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/buiResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__bui(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__buiInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__bui(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__buiInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	bui rpc
//gsoap ns1  service method-encoding:	bui http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	bui http://10.6.10.21/GLANG#bui
//gsoap ns1  service method-output-action:	bui http://10.6.10.21/GLANG/GLANG/buiResponse
int ns1__bui(
    char*                               _sequence,	///< Request parameter
    struct ns1__buiInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__dist_USCOREin_USCOREcc                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__dist_USCOREin_USCOREcc" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#dist_in_cc"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/dist_in_ccRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/dist_in_ccResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__dist_USCOREin_USCOREcc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    int                                 position1,
    int                                 position2,
    struct ns1__dist_USCOREin_USCOREccInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__dist_USCOREin_USCOREcc(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    int                                 position1,
    int                                 position2,
    struct ns1__dist_USCOREin_USCOREccInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	dist_USCOREin_USCOREcc rpc
//gsoap ns1  service method-encoding:	dist_USCOREin_USCOREcc http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	dist_USCOREin_USCOREcc http://10.6.10.21/GLANG#dist_in_cc
//gsoap ns1  service method-output-action:	dist_USCOREin_USCOREcc http://10.6.10.21/GLANG/GLANG/dist_in_ccResponse
int ns1__dist_USCOREin_USCOREcc(
    char*                               _sequence,	///< Request parameter
    int                                 _position1,	///< Request parameter
    int                                 _position2,	///< Request parameter
    struct ns1__dist_USCOREin_USCOREccInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__find_USCOREdnaAbox                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__find_USCOREdnaAbox" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#find_dnaAbox"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/find_dnaAboxRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/find_dnaAboxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__find_USCOREdnaAbox(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREdnaAboxInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__find_USCOREdnaAbox(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREdnaAboxInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	find_USCOREdnaAbox rpc
//gsoap ns1  service method-encoding:	find_USCOREdnaAbox http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	find_USCOREdnaAbox http://10.6.10.21/GLANG#find_dnaAbox
//gsoap ns1  service method-output-action:	find_USCOREdnaAbox http://10.6.10.21/GLANG/GLANG/find_dnaAboxResponse
int ns1__find_USCOREdnaAbox(
    char*                               _sequence,	///< Request parameter
    struct ns1__find_USCOREdnaAboxInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__ttest                                                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__ttestResponse" of service binding "GLANGSoapBinding" operation "ns1__ttest"
struct ns1__ttestResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__ttest" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#ttest"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/ttestRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/ttestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__ttest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array1,
    struct arrayIn*                     array2,
    struct ns1__ttestInputParams*       params,
    // response parameters:
    struct ns1__ttestResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__ttest(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array1,
    struct arrayIn*                     array2,
    struct ns1__ttestInputParams*       params,
    // response parameters:
    struct ns1__ttestResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	ttest rpc
//gsoap ns1  service method-encoding:	ttest http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	ttest http://10.6.10.21/GLANG#ttest
//gsoap ns1  service method-output-action:	ttest http://10.6.10.21/GLANG/GLANG/ttestResponse
int ns1__ttest(
    struct arrayIn*                     _array1,	///< Request parameter
    struct arrayIn*                     _array2,	///< Request parameter
    struct ns1__ttestInputParams*       _params,	///< Request parameter
    struct ns1__ttestResponse          *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__seq2png                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__seq2png" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#seq2png"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/seq2pngRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/seq2pngResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__seq2png(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__seq2pngInputParams*     params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__seq2png(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__seq2pngInputParams*     params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	seq2png rpc
//gsoap ns1  service method-encoding:	seq2png http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	seq2png http://10.6.10.21/GLANG#seq2png
//gsoap ns1  service method-output-action:	seq2png http://10.6.10.21/GLANG/GLANG/seq2pngResponse
int ns1__seq2png(
    char*                               _sequence,	///< Request parameter
    struct ns1__seq2pngInputParams*     _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__amino_USCOREcounter                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__amino_USCOREcounter" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#amino_counter"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/amino_counterRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/amino_counterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__amino_USCOREcounter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__amino_USCOREcounterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__amino_USCOREcounter(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__amino_USCOREcounterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	amino_USCOREcounter rpc
//gsoap ns1  service method-encoding:	amino_USCOREcounter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	amino_USCOREcounter http://10.6.10.21/GLANG#amino_counter
//gsoap ns1  service method-output-action:	amino_USCOREcounter http://10.6.10.21/GLANG/GLANG/amino_counterResponse
int ns1__amino_USCOREcounter(
    char*                               _sequence,	///< Request parameter
    struct ns1__amino_USCOREcounterInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__aaui                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__aaui" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#aaui"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/aauiRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/aauiResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__aaui(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__aauiInputParams*        params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__aaui(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__aauiInputParams*        params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	aaui rpc
//gsoap ns1  service method-encoding:	aaui http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	aaui http://10.6.10.21/GLANG#aaui
//gsoap ns1  service method-output-action:	aaui http://10.6.10.21/GLANG/GLANG/aauiResponse
int ns1__aaui(
    char*                               _sequence,	///< Request parameter
    struct ns1__aauiInputParams*        _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__codon_USCOREcompiler                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__codon_USCOREcompiler" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#codon_compiler"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/codon_compilerRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/codon_compilerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__codon_USCOREcompiler(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREcompilerInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__codon_USCOREcompiler(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREcompilerInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	codon_USCOREcompiler rpc
//gsoap ns1  service method-encoding:	codon_USCOREcompiler http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	codon_USCOREcompiler http://10.6.10.21/GLANG#codon_compiler
//gsoap ns1  service method-output-action:	codon_USCOREcompiler http://10.6.10.21/GLANG/GLANG/codon_compilerResponse
int ns1__codon_USCOREcompiler(
    char*                               _sequence,	///< Request parameter
    struct ns1__codon_USCOREcompilerInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__over_USCORElapping_USCOREfinder                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__over_USCORElapping_USCOREfinder" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#over_lapping_finder"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/over_lapping_finderRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/over_lapping_finderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__over_USCORElapping_USCOREfinder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__over_USCORElapping_USCOREfinderInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__over_USCORElapping_USCOREfinder(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__over_USCORElapping_USCOREfinderInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	over_USCORElapping_USCOREfinder rpc
//gsoap ns1  service method-encoding:	over_USCORElapping_USCOREfinder http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	over_USCORElapping_USCOREfinder http://10.6.10.21/GLANG#over_lapping_finder
//gsoap ns1  service method-output-action:	over_USCORElapping_USCOREfinder http://10.6.10.21/GLANG/GLANG/over_lapping_finderResponse
int ns1__over_USCORElapping_USCOREfinder(
    char*                               _sequence,	///< Request parameter
    struct ns1__over_USCORElapping_USCOREfinderInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Ew                                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__Ew" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#Ew"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/EwRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/EwResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Ew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__EwInputParams*          params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Ew(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__EwInputParams*          params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	Ew rpc
//gsoap ns1  service method-encoding:	Ew http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Ew http://10.6.10.21/GLANG#Ew
//gsoap ns1  service method-output-action:	Ew http://10.6.10.21/GLANG/GLANG/EwResponse
int ns1__Ew(
    char*                               _sequence,	///< Request parameter
    struct ns1__EwInputParams*          _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__base_USCORErelative_USCOREentropy                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__base_USCORErelative_USCOREentropy" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#base_relative_entropy"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/base_relative_entropyRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/base_relative_entropyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__base_USCORErelative_USCOREentropy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__base_USCORErelative_USCOREentropyInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__base_USCORErelative_USCOREentropy(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__base_USCORErelative_USCOREentropyInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	base_USCORErelative_USCOREentropy rpc
//gsoap ns1  service method-encoding:	base_USCORErelative_USCOREentropy http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	base_USCORErelative_USCOREentropy http://10.6.10.21/GLANG#base_relative_entropy
//gsoap ns1  service method-output-action:	base_USCORErelative_USCOREentropy http://10.6.10.21/GLANG/GLANG/base_relative_entropyResponse
int ns1__base_USCORErelative_USCOREentropy(
    char*                               _sequence,	///< Request parameter
    struct ns1__base_USCORErelative_USCOREentropyInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__view_USCOREcds                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__view_USCOREcds" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#view_cds"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/view_cdsRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/view_cdsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__view_USCOREcds(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__view_USCOREcdsInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__view_USCOREcds(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__view_USCOREcdsInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	view_USCOREcds rpc
//gsoap ns1  service method-encoding:	view_USCOREcds http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	view_USCOREcds http://10.6.10.21/GLANG#view_cds
//gsoap ns1  service method-output-action:	view_USCOREcds http://10.6.10.21/GLANG/GLANG/view_cdsResponse
int ns1__view_USCOREcds(
    char*                               _sequence,	///< Request parameter
    struct ns1__view_USCOREcdsInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__query_USCOREstrand                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__query_USCOREstrand" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#query_strand"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/query_strandRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/query_strandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__query_USCOREstrand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    char*                               position,
    struct ns1__query_USCOREstrandInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__query_USCOREstrand(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    char*                               position,
    struct ns1__query_USCOREstrandInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	query_USCOREstrand rpc
//gsoap ns1  service method-encoding:	query_USCOREstrand http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	query_USCOREstrand http://10.6.10.21/GLANG#query_strand
//gsoap ns1  service method-output-action:	query_USCOREstrand http://10.6.10.21/GLANG/GLANG/query_strandResponse
int ns1__query_USCOREstrand(
    char*                               _sequence,	///< Request parameter
    char*                               _position,	///< Request parameter
    struct ns1__query_USCOREstrandInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__genomicskew                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__genomicskew" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#genomicskew"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/genomicskewRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/genomicskewResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__genomicskew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__genomicskewInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__genomicskew(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__genomicskewInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	genomicskew rpc
//gsoap ns1  service method-encoding:	genomicskew http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	genomicskew http://10.6.10.21/GLANG#genomicskew
//gsoap ns1  service method-output-action:	genomicskew http://10.6.10.21/GLANG/GLANG/genomicskewResponse
int ns1__genomicskew(
    char*                               _sequence,	///< Request parameter
    struct ns1__genomicskewInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__filter_USCOREcds_USCOREby_USCOREatg                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__filter_USCOREcds_USCOREby_USCOREatgResponse" of service binding "GLANGSoapBinding" operation "ns1__filter_USCOREcds_USCOREby_USCOREatg"
struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__filter_USCOREcds_USCOREby_USCOREatg" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#filter_cds_by_atg"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/filter_cds_by_atgRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/filter_cds_by_atgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__filter_USCOREcds_USCOREby_USCOREatg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams* params,
    // response parameters:
    struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__filter_USCOREcds_USCOREby_USCOREatg(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams* params,
    // response parameters:
    struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	filter_USCOREcds_USCOREby_USCOREatg rpc
//gsoap ns1  service method-encoding:	filter_USCOREcds_USCOREby_USCOREatg http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	filter_USCOREcds_USCOREby_USCOREatg http://10.6.10.21/GLANG#filter_cds_by_atg
//gsoap ns1  service method-output-action:	filter_USCOREcds_USCOREby_USCOREatg http://10.6.10.21/GLANG/GLANG/filter_cds_by_atgResponse
int ns1__filter_USCOREcds_USCOREby_USCOREatg(
    char*                               _sequence,	///< Request parameter
    struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams* _params,	///< Request parameter
    struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__gcsi                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__gcsi" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#gcsi"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/gcsiRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/gcsiResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__gcsi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__gcsiInputParams*        params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__gcsi(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__gcsiInputParams*        params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	gcsi rpc
//gsoap ns1  service method-encoding:	gcsi http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	gcsi http://10.6.10.21/GLANG#gcsi
//gsoap ns1  service method-output-action:	gcsi http://10.6.10.21/GLANG/GLANG/gcsiResponse
int ns1__gcsi(
    char*                               _sequence,	///< Request parameter
    struct ns1__gcsiInputParams*        _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__cai                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__cai" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#cai"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/caiRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/caiResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__cai(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__caiInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__cai(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__caiInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	cai rpc
//gsoap ns1  service method-encoding:	cai http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	cai http://10.6.10.21/GLANG#cai
//gsoap ns1  service method-output-action:	cai http://10.6.10.21/GLANG/GLANG/caiResponse
int ns1__cai(
    char*                               _sequence,	///< Request parameter
    struct ns1__caiInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__maxdex                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__maxdex" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#maxdex"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/maxdexRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/maxdexResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__maxdex(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__maxdex(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	maxdex rpc
//gsoap ns1  service method-encoding:	maxdex http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	maxdex http://10.6.10.21/GLANG#maxdex
//gsoap ns1  service method-output-action:	maxdex http://10.6.10.21/GLANG/GLANG/maxdexResponse
int ns1__maxdex(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__max                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__max" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#max"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/maxRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/maxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__max(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__max(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	max rpc
//gsoap ns1  service method-encoding:	max http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	max http://10.6.10.21/GLANG#max
//gsoap ns1  service method-output-action:	max http://10.6.10.21/GLANG/GLANG/maxResponse
int ns1__max(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__query_USCOREarm                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__query_USCOREarm" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#query_arm"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/query_armRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/query_armResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__query_USCOREarm(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    int                                 position,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__query_USCOREarm(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    int                                 position,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	query_USCOREarm rpc
//gsoap ns1  service method-encoding:	query_USCOREarm http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	query_USCOREarm http://10.6.10.21/GLANG#query_arm
//gsoap ns1  service method-output-action:	query_USCOREarm http://10.6.10.21/GLANG/GLANG/query_armResponse
int ns1__query_USCOREarm(
    char*                               _sequence,	///< Request parameter
    int                                 _position,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__mindex                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__mindex" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#mindex"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/mindexRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/mindexResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__mindex(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__mindex(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	mindex rpc
//gsoap ns1  service method-encoding:	mindex http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	mindex http://10.6.10.21/GLANG#mindex
//gsoap ns1  service method-output-action:	mindex http://10.6.10.21/GLANG/GLANG/mindexResponse
int ns1__mindex(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__peptide_USCOREmass                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__peptide_USCOREmass" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#peptide_mass"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/peptide_massRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/peptide_massResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__peptide_USCOREmass(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__peptide_USCOREmass(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	peptide_USCOREmass rpc
//gsoap ns1  service method-encoding:	peptide_USCOREmass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	peptide_USCOREmass http://10.6.10.21/GLANG#peptide_mass
//gsoap ns1  service method-output-action:	peptide_USCOREmass http://10.6.10.21/GLANG/GLANG/peptide_massResponse
int ns1__peptide_USCOREmass(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__consensus_USCOREz                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__consensus_USCOREz" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#consensus_z"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/consensus_zRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/consensus_zResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__consensus_USCOREz(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array_USCOREseq,
    struct ns1__consensus_USCOREzInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__consensus_USCOREz(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array_USCOREseq,
    struct ns1__consensus_USCOREzInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	consensus_USCOREz rpc
//gsoap ns1  service method-encoding:	consensus_USCOREz http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	consensus_USCOREz http://10.6.10.21/GLANG#consensus_z
//gsoap ns1  service method-output-action:	consensus_USCOREz http://10.6.10.21/GLANG/GLANG/consensus_zResponse
int ns1__consensus_USCOREz(
    struct arrayIn*                     _array_USCOREseq,	///< Request parameter
    struct ns1__consensus_USCOREzInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__genome_USCOREmap                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__genome_USCOREmap" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#genome_map"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/genome_mapRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/genome_mapResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__genome_USCOREmap(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__genome_USCOREmapInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__genome_USCOREmap(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__genome_USCOREmapInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	genome_USCOREmap rpc
//gsoap ns1  service method-encoding:	genome_USCOREmap http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	genome_USCOREmap http://10.6.10.21/GLANG#genome_map
//gsoap ns1  service method-output-action:	genome_USCOREmap http://10.6.10.21/GLANG/GLANG/genome_mapResponse
int ns1__genome_USCOREmap(
    char*                               _sequence,	///< Request parameter
    struct ns1__genome_USCOREmapInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__longest_USCOREORF                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__longest_USCOREORF" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#longest_ORF"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/longest_ORFRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/longest_ORFResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__longest_USCOREORF(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__longest_USCOREORF(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	longest_USCOREORF rpc
//gsoap ns1  service method-encoding:	longest_USCOREORF http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	longest_USCOREORF http://10.6.10.21/GLANG#longest_ORF
//gsoap ns1  service method-output-action:	longest_USCOREORF http://10.6.10.21/GLANG/GLANG/longest_ORFResponse
int ns1__longest_USCOREORF(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__rep_USCOREori_USCOREter                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__rep_USCOREori_USCOREter" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#rep_ori_ter"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/rep_ori_terRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/rep_ori_terResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__rep_USCOREori_USCOREter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__rep_USCOREori_USCOREterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__rep_USCOREori_USCOREter(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__rep_USCOREori_USCOREterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	rep_USCOREori_USCOREter rpc
//gsoap ns1  service method-encoding:	rep_USCOREori_USCOREter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	rep_USCOREori_USCOREter http://10.6.10.21/GLANG#rep_ori_ter
//gsoap ns1  service method-output-action:	rep_USCOREori_USCOREter http://10.6.10.21/GLANG/GLANG/rep_ori_terResponse
int ns1__rep_USCOREori_USCOREter(
    char*                               _sequence,	///< Request parameter
    struct ns1__rep_USCOREori_USCOREterInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__calc_USCOREpI                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__calc_USCOREpI" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#calc_pI"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/calc_pIRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/calc_pIResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__calc_USCOREpI(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__calc_USCOREpI(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	calc_USCOREpI rpc
//gsoap ns1  service method-encoding:	calc_USCOREpI http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	calc_USCOREpI http://10.6.10.21/GLANG#calc_pI
//gsoap ns1  service method-output-action:	calc_USCOREpI http://10.6.10.21/GLANG/GLANG/calc_pIResponse
int ns1__calc_USCOREpI(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__DoubleHelix                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__DoubleHelix" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#DoubleHelix"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/DoubleHelixRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/DoubleHelixResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__DoubleHelix(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__DoubleHelixInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__DoubleHelix(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__DoubleHelixInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	DoubleHelix rpc
//gsoap ns1  service method-encoding:	DoubleHelix http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	DoubleHelix http://10.6.10.21/GLANG#DoubleHelix
//gsoap ns1  service method-output-action:	DoubleHelix http://10.6.10.21/GLANG/GLANG/DoubleHelixResponse
int ns1__DoubleHelix(
    char*                               _sequence,	///< Request parameter
    struct ns1__DoubleHelixInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__base_USCOREentropy                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__base_USCOREentropy" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#base_entropy"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/base_entropyRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/base_entropyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__base_USCOREentropy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__base_USCOREentropyInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__base_USCOREentropy(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__base_USCOREentropyInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	base_USCOREentropy rpc
//gsoap ns1  service method-encoding:	base_USCOREentropy http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	base_USCOREentropy http://10.6.10.21/GLANG#base_entropy
//gsoap ns1  service method-output-action:	base_USCOREentropy http://10.6.10.21/GLANG/GLANG/base_entropyResponse
int ns1__base_USCOREentropy(
    char*                               _sequence,	///< Request parameter
    struct ns1__base_USCOREentropyInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__to_USCOREfasta                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__to_USCOREfasta" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#to_fasta"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/to_fastaRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/to_fastaResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__to_USCOREfasta(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__to_USCOREfastaInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__to_USCOREfasta(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__to_USCOREfastaInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	to_USCOREfasta rpc
//gsoap ns1  service method-encoding:	to_USCOREfasta http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	to_USCOREfasta http://10.6.10.21/GLANG#to_fasta
//gsoap ns1  service method-output-action:	to_USCOREfasta http://10.6.10.21/GLANG/GLANG/to_fastaResponse
int ns1__to_USCOREfasta(
    char*                               _sequence,	///< Request parameter
    struct ns1__to_USCOREfastaInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__find_USCOREdif                                                      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__find_USCOREdifResponse" of service binding "GLANGSoapBinding" operation "ns1__find_USCOREdif"
struct ns1__find_USCOREdifResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__find_USCOREdif" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#find_dif"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/find_difRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/find_difResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__find_USCOREdif(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREdifInputParams* params,
    // response parameters:
    struct ns1__find_USCOREdifResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__find_USCOREdif(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREdifInputParams* params,
    // response parameters:
    struct ns1__find_USCOREdifResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	find_USCOREdif rpc
//gsoap ns1  service method-encoding:	find_USCOREdif http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	find_USCOREdif http://10.6.10.21/GLANG#find_dif
//gsoap ns1  service method-output-action:	find_USCOREdif http://10.6.10.21/GLANG/GLANG/find_difResponse
int ns1__find_USCOREdif(
    char*                               _sequence,	///< Request parameter
    struct ns1__find_USCOREdifInputParams* _params,	///< Request parameter
    struct ns1__find_USCOREdifResponse *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__cbi                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__cbi" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#cbi"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/cbiRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/cbiResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__cbi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__cbiInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__cbi(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__cbiInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	cbi rpc
//gsoap ns1  service method-encoding:	cbi http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	cbi http://10.6.10.21/GLANG#cbi
//gsoap ns1  service method-output-action:	cbi http://10.6.10.21/GLANG/GLANG/cbiResponse
int ns1__cbi(
    char*                               _sequence,	///< Request parameter
    struct ns1__cbiInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__genes_USCOREfrom_USCOREori                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__genes_USCOREfrom_USCOREoriResponse" of service binding "GLANGSoapBinding" operation "ns1__genes_USCOREfrom_USCOREori"
struct ns1__genes_USCOREfrom_USCOREoriResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__genes_USCOREfrom_USCOREori" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#genes_from_ori"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/genes_from_oriRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/genes_from_oriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__genes_USCOREfrom_USCOREori(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    char*                               direction,
    struct ns1__genes_USCOREfrom_USCOREoriInputParams* params,
    // response parameters:
    struct ns1__genes_USCOREfrom_USCOREoriResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__genes_USCOREfrom_USCOREori(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    char*                               direction,
    struct ns1__genes_USCOREfrom_USCOREoriInputParams* params,
    // response parameters:
    struct ns1__genes_USCOREfrom_USCOREoriResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	genes_USCOREfrom_USCOREori rpc
//gsoap ns1  service method-encoding:	genes_USCOREfrom_USCOREori http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	genes_USCOREfrom_USCOREori http://10.6.10.21/GLANG#genes_from_ori
//gsoap ns1  service method-output-action:	genes_USCOREfrom_USCOREori http://10.6.10.21/GLANG/GLANG/genes_from_oriResponse
int ns1__genes_USCOREfrom_USCOREori(
    char*                               _sequence,	///< Request parameter
    char*                               _direction,	///< Request parameter
    struct ns1__genes_USCOREfrom_USCOREoriInputParams* _params,	///< Request parameter
    struct ns1__genes_USCOREfrom_USCOREoriResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__geneskew                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__geneskew" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#geneskew"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/geneskewRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/geneskewResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__geneskew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__geneskewInputParams*    params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__geneskew(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__geneskewInputParams*    params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	geneskew rpc
//gsoap ns1  service method-encoding:	geneskew http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	geneskew http://10.6.10.21/GLANG#geneskew
//gsoap ns1  service method-output-action:	geneskew http://10.6.10.21/GLANG/GLANG/geneskewResponse
int ns1__geneskew(
    char*                               _sequence,	///< Request parameter
    struct ns1__geneskewInputParams*    _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__standard_USCOREdeviation                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__standard_USCOREdeviation" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#standard_deviation"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/standard_deviationRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/standard_deviationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__standard_USCOREdeviation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__standard_USCOREdeviation(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	standard_USCOREdeviation rpc
//gsoap ns1  service method-encoding:	standard_USCOREdeviation http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	standard_USCOREdeviation http://10.6.10.21/GLANG#standard_deviation
//gsoap ns1  service method-output-action:	standard_USCOREdeviation http://10.6.10.21/GLANG/GLANG/standard_deviationResponse
int ns1__standard_USCOREdeviation(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__cor                                                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__corResponse" of service binding "GLANGSoapBinding" operation "ns1__cor"
struct ns1__corResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__cor" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#cor"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/corRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/corResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__cor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array1,
    struct arrayIn*                     array2,
    struct ns1__corInputParams*         params,
    // response parameters:
    struct ns1__corResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__cor(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array1,
    struct arrayIn*                     array2,
    struct ns1__corInputParams*         params,
    // response parameters:
    struct ns1__corResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	cor rpc
//gsoap ns1  service method-encoding:	cor http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	cor http://10.6.10.21/GLANG#cor
//gsoap ns1  service method-output-action:	cor http://10.6.10.21/GLANG/GLANG/corResponse
int ns1__cor(
    struct arrayIn*                     _array1,	///< Request parameter
    struct arrayIn*                     _array2,	///< Request parameter
    struct ns1__corInputParams*         _params,	///< Request parameter
    struct ns1__corResponse            *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__cumulative                                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__cumulativeResponse" of service binding "GLANGSoapBinding" operation "ns1__cumulative"
struct ns1__cumulativeResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__cumulative" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#cumulative"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/cumulativeRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/cumulativeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__cumulative(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    struct ns1__cumulativeResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__cumulative(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    struct ns1__cumulativeResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	cumulative rpc
//gsoap ns1  service method-encoding:	cumulative http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	cumulative http://10.6.10.21/GLANG#cumulative
//gsoap ns1  service method-output-action:	cumulative http://10.6.10.21/GLANG/GLANG/cumulativeResponse
int ns1__cumulative(
    struct arrayIn*                     _array,	///< Request parameter
    struct ns1__cumulativeResponse     *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__delta_USCOREenc                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__delta_USCOREenc" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#delta_enc"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/delta_encRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/delta_encResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__delta_USCOREenc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__delta_USCOREenc(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	delta_USCOREenc rpc
//gsoap ns1  service method-encoding:	delta_USCOREenc http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	delta_USCOREenc http://10.6.10.21/GLANG#delta_enc
//gsoap ns1  service method-output-action:	delta_USCOREenc http://10.6.10.21/GLANG/GLANG/delta_encResponse
int ns1__delta_USCOREenc(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__delta_USCOREgcskew                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__delta_USCOREgcskew" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#delta_gcskew"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/delta_gcskewRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/delta_gcskewResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__delta_USCOREgcskew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__delta_USCOREgcskewInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__delta_USCOREgcskew(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__delta_USCOREgcskewInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	delta_USCOREgcskew rpc
//gsoap ns1  service method-encoding:	delta_USCOREgcskew http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	delta_USCOREgcskew http://10.6.10.21/GLANG#delta_gcskew
//gsoap ns1  service method-output-action:	delta_USCOREgcskew http://10.6.10.21/GLANG/GLANG/delta_gcskewResponse
int ns1__delta_USCOREgcskew(
    char*                               _sequence,	///< Request parameter
    struct ns1__delta_USCOREgcskewInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__molecular_USCOREweight                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__molecular_USCOREweight" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#molecular_weight"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/molecular_weightRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/molecular_weightResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__molecular_USCOREweight(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__molecular_USCOREweightInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__molecular_USCOREweight(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__molecular_USCOREweightInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	molecular_USCOREweight rpc
//gsoap ns1  service method-encoding:	molecular_USCOREweight http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	molecular_USCOREweight http://10.6.10.21/GLANG#molecular_weight
//gsoap ns1  service method-output-action:	molecular_USCOREweight http://10.6.10.21/GLANG/GLANG/molecular_weightResponse
int ns1__molecular_USCOREweight(
    char*                               _sequence,	///< Request parameter
    struct ns1__molecular_USCOREweightInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__gcskew                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__gcskew" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#gcskew"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/gcskewRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/gcskewResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__gcskew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__gcskewInputParams*      params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__gcskew(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__gcskewInputParams*      params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	gcskew rpc
//gsoap ns1  service method-encoding:	gcskew http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	gcskew http://10.6.10.21/GLANG#gcskew
//gsoap ns1  service method-output-action:	gcskew http://10.6.10.21/GLANG/GLANG/gcskewResponse
int ns1__gcskew(
    char*                               _sequence,	///< Request parameter
    struct ns1__gcskewInputParams*      _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__genome_USCOREmap3                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__genome_USCOREmap3" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#genome_map3"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/genome_map3Request"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/genome_map3Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__genome_USCOREmap3(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__genome_USCOREmap3InputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__genome_USCOREmap3(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__genome_USCOREmap3InputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	genome_USCOREmap3 rpc
//gsoap ns1  service method-encoding:	genome_USCOREmap3 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	genome_USCOREmap3 http://10.6.10.21/GLANG#genome_map3
//gsoap ns1  service method-output-action:	genome_USCOREmap3 http://10.6.10.21/GLANG/GLANG/genome_map3Response
int ns1__genome_USCOREmap3(
    char*                               _sequence,	///< Request parameter
    struct ns1__genome_USCOREmap3InputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__seqinfo                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__seqinfo" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#seqinfo"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/seqinfoRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/seqinfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__seqinfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__seqinfo(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	seqinfo rpc
//gsoap ns1  service method-encoding:	seqinfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	seqinfo http://10.6.10.21/GLANG#seqinfo
//gsoap ns1  service method-output-action:	seqinfo http://10.6.10.21/GLANG/GLANG/seqinfoResponse
int ns1__seqinfo(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__signature                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__signature" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#signature"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/signatureRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/signatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__signature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__signatureInputParams*   params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__signature(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__signatureInputParams*   params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	signature rpc
//gsoap ns1  service method-encoding:	signature http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	signature http://10.6.10.21/GLANG#signature
//gsoap ns1  service method-output-action:	signature http://10.6.10.21/GLANG/GLANG/signatureResponse
int ns1__signature(
    char*                               _sequence,	///< Request parameter
    struct ns1__signatureInputParams*   _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__base_USCOREinformation_USCOREcontent                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__base_USCOREinformation_USCOREcontent" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#base_information_content"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/base_information_contentRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/base_information_contentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__base_USCOREinformation_USCOREcontent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__base_USCOREinformation_USCOREcontentInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__base_USCOREinformation_USCOREcontent(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__base_USCOREinformation_USCOREcontentInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	base_USCOREinformation_USCOREcontent rpc
//gsoap ns1  service method-encoding:	base_USCOREinformation_USCOREcontent http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	base_USCOREinformation_USCOREcontent http://10.6.10.21/GLANG#base_information_content
//gsoap ns1  service method-output-action:	base_USCOREinformation_USCOREcontent http://10.6.10.21/GLANG/GLANG/base_information_contentResponse
int ns1__base_USCOREinformation_USCOREcontent(
    char*                               _sequence,	///< Request parameter
    struct ns1__base_USCOREinformation_USCOREcontentInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__dnawalk                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__dnawalk" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#dnawalk"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/dnawalkRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/dnawalkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__dnawalk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__dnawalkInputParams*     params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__dnawalk(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__dnawalkInputParams*     params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	dnawalk rpc
//gsoap ns1  service method-encoding:	dnawalk http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	dnawalk http://10.6.10.21/GLANG#dnawalk
//gsoap ns1  service method-output-action:	dnawalk http://10.6.10.21/GLANG/GLANG/dnawalkResponse
int ns1__dnawalk(
    char*                               _sequence,	///< Request parameter
    struct ns1__dnawalkInputParams*     _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__find_USCOREter                                                      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__find_USCOREterResponse" of service binding "GLANGSoapBinding" operation "ns1__find_USCOREter"
struct ns1__find_USCOREterResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__find_USCOREter" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#find_ter"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/find_terRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/find_terResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__find_USCOREter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREterInputParams* params,
    // response parameters:
    struct ns1__find_USCOREterResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__find_USCOREter(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREterInputParams* params,
    // response parameters:
    struct ns1__find_USCOREterResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	find_USCOREter rpc
//gsoap ns1  service method-encoding:	find_USCOREter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	find_USCOREter http://10.6.10.21/GLANG#find_ter
//gsoap ns1  service method-output-action:	find_USCOREter http://10.6.10.21/GLANG/GLANG/find_terResponse
int ns1__find_USCOREter(
    char*                               _sequence,	///< Request parameter
    struct ns1__find_USCOREterInputParams* _params,	///< Request parameter
    struct ns1__find_USCOREterResponse *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__shuffleseq                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__shuffleseq" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#shuffleseq"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/shuffleseqRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/shuffleseqResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__shuffleseq(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__shuffleseqInputParams*  params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__shuffleseq(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__shuffleseqInputParams*  params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	shuffleseq rpc
//gsoap ns1  service method-encoding:	shuffleseq http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	shuffleseq http://10.6.10.21/GLANG#shuffleseq
//gsoap ns1  service method-output-action:	shuffleseq http://10.6.10.21/GLANG/GLANG/shuffleseqResponse
int ns1__shuffleseq(
    char*                               _sequence,	///< Request parameter
    struct ns1__shuffleseqInputParams*  _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__oligomer_USCOREsearch                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__oligomer_USCOREsearch" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#oligomer_search"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/oligomer_searchRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/oligomer_searchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__oligomer_USCOREsearch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    char*                               oligomer,
    struct ns1__oligomer_USCOREsearchInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__oligomer_USCOREsearch(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    char*                               oligomer,
    struct ns1__oligomer_USCOREsearchInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	oligomer_USCOREsearch rpc
//gsoap ns1  service method-encoding:	oligomer_USCOREsearch http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	oligomer_USCOREsearch http://10.6.10.21/GLANG#oligomer_search
//gsoap ns1  service method-output-action:	oligomer_USCOREsearch http://10.6.10.21/GLANG/GLANG/oligomer_searchResponse
int ns1__oligomer_USCOREsearch(
    char*                               _sequence,	///< Request parameter
    char*                               _oligomer,	///< Request parameter
    struct ns1__oligomer_USCOREsearchInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__find_USCOREpattern                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__find_USCOREpattern" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#find_pattern"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/find_patternRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/find_patternResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__find_USCOREpattern(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    char*                               pattern,
    struct ns1__find_USCOREpatternInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__find_USCOREpattern(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    char*                               pattern,
    struct ns1__find_USCOREpatternInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	find_USCOREpattern rpc
//gsoap ns1  service method-encoding:	find_USCOREpattern http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	find_USCOREpattern http://10.6.10.21/GLANG#find_pattern
//gsoap ns1  service method-output-action:	find_USCOREpattern http://10.6.10.21/GLANG/GLANG/find_patternResponse
int ns1__find_USCOREpattern(
    char*                               _sequence,	///< Request parameter
    char*                               _pattern,	///< Request parameter
    struct ns1__find_USCOREpatternInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__gcwin                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__gcwin" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#gcwin"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/gcwinRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/gcwinResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__gcwin(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__gcwinInputParams*       params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__gcwin(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__gcwinInputParams*       params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	gcwin rpc
//gsoap ns1  service method-encoding:	gcwin http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	gcwin http://10.6.10.21/GLANG#gcwin
//gsoap ns1  service method-output-action:	gcwin http://10.6.10.21/GLANG/GLANG/gcwinResponse
int ns1__gcwin(
    char*                               _sequence,	///< Request parameter
    struct ns1__gcwinInputParams*       _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__oligomer_USCOREcounter                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__oligomer_USCOREcounter" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#oligomer_counter"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/oligomer_counterRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/oligomer_counterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__oligomer_USCOREcounter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    char*                               oligomer,
    struct ns1__oligomer_USCOREcounterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__oligomer_USCOREcounter(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    char*                               oligomer,
    struct ns1__oligomer_USCOREcounterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	oligomer_USCOREcounter rpc
//gsoap ns1  service method-encoding:	oligomer_USCOREcounter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	oligomer_USCOREcounter http://10.6.10.21/GLANG#oligomer_counter
//gsoap ns1  service method-output-action:	oligomer_USCOREcounter http://10.6.10.21/GLANG/GLANG/oligomer_counterResponse
int ns1__oligomer_USCOREcounter(
    char*                               _sequence,	///< Request parameter
    char*                               _oligomer,	///< Request parameter
    struct ns1__oligomer_USCOREcounterInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__codon_USCOREusage                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__codon_USCOREusage" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#codon_usage"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/codon_usageRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/codon_usageResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__codon_USCOREusage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREusageInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__codon_USCOREusage(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREusageInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	codon_USCOREusage rpc
//gsoap ns1  service method-encoding:	codon_USCOREusage http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	codon_USCOREusage http://10.6.10.21/GLANG#codon_usage
//gsoap ns1  service method-output-action:	codon_USCOREusage http://10.6.10.21/GLANG/GLANG/codon_usageResponse
int ns1__codon_USCOREusage(
    char*                               _sequence,	///< Request parameter
    struct ns1__codon_USCOREusageInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__min                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__min" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#min"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/minRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/minResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__min(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__min(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	min rpc
//gsoap ns1  service method-encoding:	min http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	min http://10.6.10.21/GLANG#min
//gsoap ns1  service method-output-action:	min http://10.6.10.21/GLANG/GLANG/minResponse
int ns1__min(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__find_USCOREiteron                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__find_USCOREiteron" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#find_iteron"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/find_iteronRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/find_iteronResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__find_USCOREiteron(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREiteronInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__find_USCOREiteron(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__find_USCOREiteronInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	find_USCOREiteron rpc
//gsoap ns1  service method-encoding:	find_USCOREiteron http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	find_USCOREiteron http://10.6.10.21/GLANG#find_iteron
//gsoap ns1  service method-output-action:	find_USCOREiteron http://10.6.10.21/GLANG/GLANG/find_iteronResponse
int ns1__find_USCOREiteron(
    char*                               _sequence,	///< Request parameter
    struct ns1__find_USCOREiteronInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__complement                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__complement" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#complement"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/complementRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/complementResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__complement(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__complement(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	complement rpc
//gsoap ns1  service method-encoding:	complement http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	complement http://10.6.10.21/GLANG#complement
//gsoap ns1  service method-output-action:	complement http://10.6.10.21/GLANG/GLANG/complementResponse
int ns1__complement(
    char*                               _sequence,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__mean                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__mean" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#mean"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/meanRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/meanResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__mean(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__mean(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	mean rpc
//gsoap ns1  service method-encoding:	mean http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	mean http://10.6.10.21/GLANG#mean
//gsoap ns1  service method-output-action:	mean http://10.6.10.21/GLANG/GLANG/meanResponse
int ns1__mean(
    struct arrayIn*                     _array,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__codon_USCOREcounter                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__codon_USCOREcounter" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#codon_counter"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/codon_counterRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/codon_counterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__codon_USCOREcounter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREcounterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__codon_USCOREcounter(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__codon_USCOREcounterInputParams* params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	codon_USCOREcounter rpc
//gsoap ns1  service method-encoding:	codon_USCOREcounter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	codon_USCOREcounter http://10.6.10.21/GLANG#codon_counter
//gsoap ns1  service method-output-action:	codon_USCOREcounter http://10.6.10.21/GLANG/GLANG/codon_counterResponse
int ns1__codon_USCOREcounter(
    char*                               _sequence,	///< Request parameter
    struct ns1__codon_USCOREcounterInputParams* _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__entrez                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__entrez" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#entrez"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/entrezRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/entrezResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__entrez(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               database,
    char*                               query,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__entrez(
    struct soap *soap,
    // request parameters:
    char*                               database,
    char*                               query,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	entrez rpc
//gsoap ns1  service method-encoding:	entrez http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	entrez http://10.6.10.21/GLANG#entrez
//gsoap ns1  service method-output-action:	entrez http://10.6.10.21/GLANG/GLANG/entrezResponse
int ns1__entrez(
    char*                               _database,	///< Request parameter
    char*                               _query,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__palindrome                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__palindrome" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#palindrome"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/palindromeRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/palindromeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__palindrome(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__palindromeInputParams*  params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__palindrome(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__palindromeInputParams*  params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	palindrome rpc
//gsoap ns1  service method-encoding:	palindrome http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	palindrome http://10.6.10.21/GLANG#palindrome
//gsoap ns1  service method-output-action:	palindrome http://10.6.10.21/GLANG/GLANG/palindromeResponse
int ns1__palindrome(
    char*                               _sequence,	///< Request parameter
    struct ns1__palindromeInputParams*  _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__least_USCOREsquares_USCOREfit                                       *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__least_USCOREsquares_USCOREfitResponse" of service binding "GLANGSoapBinding" operation "ns1__least_USCOREsquares_USCOREfit"
struct ns1__least_USCOREsquares_USCOREfitResponse
{
    struct arrayOut*                    _result;
};

/// Operation "ns1__least_USCOREsquares_USCOREfit" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#least_squares_fit"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/least_squares_fitRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/least_squares_fitResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__least_USCOREsquares_USCOREfit(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    struct ns1__least_USCOREsquares_USCOREfitResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__least_USCOREsquares_USCOREfit(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array,
    // response parameters:
    struct ns1__least_USCOREsquares_USCOREfitResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	least_USCOREsquares_USCOREfit rpc
//gsoap ns1  service method-encoding:	least_USCOREsquares_USCOREfit http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	least_USCOREsquares_USCOREfit http://10.6.10.21/GLANG#least_squares_fit
//gsoap ns1  service method-output-action:	least_USCOREsquares_USCOREfit http://10.6.10.21/GLANG/GLANG/least_squares_fitResponse
int ns1__least_USCOREsquares_USCOREfit(
    struct arrayIn*                     _array,	///< Request parameter
    struct ns1__least_USCOREsquares_USCOREfitResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__dinuc                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__dinuc" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#dinuc"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/dinucRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/dinucResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__dinuc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__dinucInputParams*       params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__dinuc(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__dinucInputParams*       params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	dinuc rpc
//gsoap ns1  service method-encoding:	dinuc http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	dinuc http://10.6.10.21/GLANG#dinuc
//gsoap ns1  service method-output-action:	dinuc http://10.6.10.21/GLANG/GLANG/dinucResponse
int ns1__dinuc(
    char*                               _sequence,	///< Request parameter
    struct ns1__dinucInputParams*       _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__cgr                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__cgr" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#cgr"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/cgrRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/cgrResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__cgr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    struct ns1__cgrInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__cgr(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    struct ns1__cgrInputParams*         params,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	cgr rpc
//gsoap ns1  service method-encoding:	cgr http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	cgr http://10.6.10.21/GLANG#cgr
//gsoap ns1  service method-output-action:	cgr http://10.6.10.21/GLANG/GLANG/cgrResponse
int ns1__cgr(
    char*                               _sequence,	///< Request parameter
    struct ns1__cgrInputParams*         _params,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__grapher                                                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__grapherResponse" of service binding "GLANGSoapBinding" operation "ns1__grapher"
struct ns1__grapherResponse
{
};

/// Operation "ns1__grapher" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#grapher"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/grapherRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/grapherResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__grapher(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct arrayIn*                     array0,
    struct arrayIn*                     array1,
    // response parameters:
    struct ns1__grapherResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__grapher(
    struct soap *soap,
    // request parameters:
    struct arrayIn*                     array0,
    struct arrayIn*                     array1,
    // response parameters:
    struct ns1__grapherResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	grapher rpc
//gsoap ns1  service method-encoding:	grapher http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	grapher http://10.6.10.21/GLANG#grapher
//gsoap ns1  service method-output-action:	grapher http://10.6.10.21/GLANG/GLANG/grapherResponse
int ns1__grapher(
    struct arrayIn*                     _array0,	///< Request parameter
    struct arrayIn*                     _array1,	///< Request parameter
    struct ns1__grapherResponse        *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__help                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__help" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#help"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/helpRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/helpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__help(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               keywords,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__help(
    struct soap *soap,
    // request parameters:
    char*                               keywords,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	help rpc
//gsoap ns1  service method-encoding:	help http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	help http://10.6.10.21/GLANG#help
//gsoap ns1  service method-output-action:	help http://10.6.10.21/GLANG/GLANG/helpResponse
int ns1__help(
    char*                               _keywords,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__hydropathy                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__hydropathy" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#hydropathy"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/hydropathyRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/hydropathyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__hydropathy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               sequence,
    // response parameters:
    float                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__hydropathy(
    struct soap *soap,
    // request parameters:
    char*                               sequence,
    // response parameters:
    float                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	hydropathy rpc
//gsoap ns1  service method-encoding:	hydropathy http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	hydropathy http://10.6.10.21/GLANG#hydropathy
//gsoap ns1  service method-output-action:	hydropathy http://10.6.10.21/GLANG/GLANG/hydropathyResponse
int ns1__hydropathy(
    char*                               _sequence,	///< Request parameter
    float                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__pubmed                                                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__pubmedResponse" of service binding "GLANGSoapBinding" operation "ns1__pubmed"
struct ns1__pubmedResponse
{
};

/// Operation "ns1__pubmed" of service binding "GLANGSoapBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - SOAP action: "http://10.6.10.21/GLANG#pubmed"

  - Addressing action: "http://10.6.10.21/GLANG/GLANG/pubmedRequest"

  - Addressing response action: "http://10.6.10.21/GLANG/GLANG/pubmedResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__pubmed(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct ns1__pubmedResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__pubmed(
    struct soap *soap,
    // request parameters:
    // response parameters:
    struct ns1__pubmedResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	pubmed rpc
//gsoap ns1  service method-encoding:	pubmed http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	pubmed http://10.6.10.21/GLANG#pubmed
//gsoap ns1  service method-output-action:	pubmed http://10.6.10.21/GLANG/GLANG/pubmedResponse
int ns1__pubmed(
    struct ns1__pubmedResponse         *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://10.6.10.21/GLANG"

*/

/* End of gae.h */
