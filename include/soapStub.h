/* soapStub.h
   Generated by gSOAP 2.8.6 from gae.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://soap.g-language.org/GLANG"
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__Definition
#define SOAP_TYPE_ns1__Definition (7)
/* ns1:Definition */
struct ns1__Definition
{
	char *entry;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREmvaInputParams
#define SOAP_TYPE_ns1__codon_USCOREmvaInputParams (8)
/* ns1:codon_mvaInputParams */
struct ns1__codon_USCOREmvaInputParams
{
	int parameter;	/* required element of type xsd:int */
	int naxis;	/* required element of type xsd:int */
	int translate;	/* required element of type xsd:int */
	int data;	/* required element of type xsd:int */
	char *method;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__P2InputParams
#define SOAP_TYPE_ns1__P2InputParams (9)
/* ns1:P2InputParams */
struct ns1__P2InputParams
{
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__w_USCOREvalueInputParams
#define SOAP_TYPE_ns1__w_USCOREvalueInputParams (10)
/* ns1:w_valueInputParams */
struct ns1__w_USCOREvalueInputParams
{
	char *include;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
	char *exclude;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREori_USCOREterInputParams
#define SOAP_TYPE_ns1__find_USCOREori_USCOREterInputParams (11)
/* ns1:find_ori_terInputParams */
struct ns1__find_USCOREori_USCOREterInputParams
{
	int window;	/* required element of type xsd:int */
	int purine;	/* required element of type xsd:int */
	int filter;	/* required element of type xsd:int */
	int keto;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__consensus_USCOREzInputParams
#define SOAP_TYPE_ns1__consensus_USCOREzInputParams (12)
/* ns1:consensus_zInputParams */
struct ns1__consensus_USCOREzInputParams
{
	int high;	/* required element of type xsd:int */
	double low;	/* required element of type xsd:double */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genome_USCOREmapInputParams
#define SOAP_TYPE_ns1__genome_USCOREmapInputParams (14)
/* ns1:genome_mapInputParams */
struct ns1__genome_USCOREmapInputParams
{
	int window;	/* required element of type xsd:int */
	int name;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	double amp;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_ns1__rep_USCOREori_USCOREterInputParams
#define SOAP_TYPE_ns1__rep_USCOREori_USCOREterInputParams (15)
/* ns1:rep_ori_terInputParams */
struct ns1__rep_USCOREori_USCOREterInputParams
{
	int oriloc;	/* required element of type xsd:int */
	int gcskew;	/* required element of type xsd:int */
	int dif_threshold;	/* required element of type xsd:int */
	int dbonly;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__DoubleHelixInputParams
#define SOAP_TYPE_ns1__DoubleHelixInputParams (16)
/* ns1:DoubleHelixInputParams */
struct ns1__DoubleHelixInputParams
{
	double speed;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_ns1__plasmid_USCOREmapInputParams
#define SOAP_TYPE_ns1__plasmid_USCOREmapInputParams (17)
/* ns1:plasmid_mapInputParams */
struct ns1__plasmid_USCOREmapInputParams
{
	char *ptt;	/* required element of type xsd:string */
	int cgi;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREentropyInputParams
#define SOAP_TYPE_ns1__base_USCOREentropyInputParams (18)
/* ns1:base_entropyInputParams */
struct ns1__base_USCOREentropyInputParams
{
	int upstream;	/* required element of type xsd:int */
	char *position;	/* required element of type xsd:string */
	int downstream;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int PatLength;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__nucleotide_USCOREperiodicityInputParams
#define SOAP_TYPE_ns1__nucleotide_USCOREperiodicityInputParams (19)
/* ns1:nucleotide_periodicityInputParams */
struct ns1__nucleotide_USCOREperiodicityInputParams
{
	int window;	/* required element of type xsd:int */
	char *nucleotide;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__to_USCOREfastaInputParams
#define SOAP_TYPE_ns1__to_USCOREfastaInputParams (20)
/* ns1:to_fastaInputParams */
struct ns1__to_USCOREfastaInputParams
{
	int length;	/* required element of type xsd:int */
	char *name;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREdifInputParams
#define SOAP_TYPE_ns1__find_USCOREdifInputParams (21)
/* ns1:find_difInputParams */
struct ns1__find_USCOREdifInputParams
{
	char *type;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__cbiInputParams
#define SOAP_TYPE_ns1__cbiInputParams (22)
/* ns1:cbiInputParams */
struct ns1__cbiInputParams
{
	int translate;	/* required element of type xsd:int */
	char *id;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genes_USCOREfrom_USCOREoriInputParams
#define SOAP_TYPE_ns1__genes_USCOREfrom_USCOREoriInputParams (23)
/* ns1:genes_from_oriInputParams */
struct ns1__genes_USCOREfrom_USCOREoriInputParams
{
	int window;	/* required element of type xsd:int */
	int purine;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int keto;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__geneskewInputParams
#define SOAP_TYPE_ns1__geneskewInputParams (24)
/* ns1:geneskewInputParams */
struct ns1__geneskewInputParams
{
	int window;	/* required element of type xsd:int */
	int slide;	/* required element of type xsd:int */
	int cumulative;	/* required element of type xsd:int */
	char *base;	/* required element of type xsd:string */
	int gc3;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__corInputParams
#define SOAP_TYPE_ns1__corInputParams (25)
/* ns1:corInputParams */
struct ns1__corInputParams
{
	int sorted;	/* required element of type xsd:int */
	char *method;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__delta_USCOREgcskewInputParams
#define SOAP_TYPE_ns1__delta_USCOREgcskewInputParams (26)
/* ns1:delta_gcskewInputParams */
struct ns1__delta_USCOREgcskewInputParams
{
	char *method;	/* required element of type xsd:string */
	int at;	/* required element of type xsd:int */
	int purine;	/* required element of type xsd:int */
	int keto;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__molecular_USCOREweightInputParams
#define SOAP_TYPE_ns1__molecular_USCOREweightInputParams (27)
/* ns1:molecular_weightInputParams */
struct ns1__molecular_USCOREweightInputParams
{
	char *strand;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__circular_USCOREmapInputParams
#define SOAP_TYPE_ns1__circular_USCOREmapInputParams (28)
/* ns1:circular_mapInputParams */
struct ns1__circular_USCOREmapInputParams
{
	int gmap;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__gcskewInputParams
#define SOAP_TYPE_ns1__gcskewInputParams (29)
/* ns1:gcskewInputParams */
struct ns1__gcskewInputParams
{
	int window;	/* required element of type xsd:int */
	int slide;	/* required element of type xsd:int */
	int cumulative;	/* required element of type xsd:int */
	int at;	/* required element of type xsd:int */
	int purine;	/* required element of type xsd:int */
	int keto;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genome_USCOREmap3InputParams
#define SOAP_TYPE_ns1__genome_USCOREmap3InputParams (30)
/* ns1:genome_map3InputParams */
struct ns1__genome_USCOREmap3InputParams
{
	int width;	/* required element of type xsd:int */
	char *datafilename;	/* required element of type xsd:string */
	int gmap;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int height;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__signatureInputParams
#define SOAP_TYPE_ns1__signatureInputParams (31)
/* ns1:signatureInputParams */
struct ns1__signatureInputParams
{
	int wordlength;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int oe;	/* required element of type xsd:int */
	int bothstrand;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__togoWSInputParams
#define SOAP_TYPE_ns1__togoWSInputParams (32)
/* ns1:togoWSInputParams */
struct ns1__togoWSInputParams
{
	char *search;	/* required element of type xsd:string */
	char *db;	/* required element of type xsd:string */
	char *format;	/* required element of type xsd:string */
	char *field;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontentInputParams
#define SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontentInputParams (33)
/* ns1:base_information_contentInputParams */
struct ns1__base_USCOREinformation_USCOREcontentInputParams
{
	int upstream;	/* required element of type xsd:int */
	char *position;	/* required element of type xsd:string */
	int downstream;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int PatLength;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__dnawalkInputParams
#define SOAP_TYPE_ns1__dnawalkInputParams (34)
/* ns1:dnawalkInputParams */
struct ns1__dnawalkInputParams
{
	int gmap;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREterInputParams
#define SOAP_TYPE_ns1__find_USCOREterInputParams (35)
/* ns1:find_terInputParams */
struct ns1__find_USCOREterInputParams
{
	char *_x002dtype;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__shuffleseqInputParams
#define SOAP_TYPE_ns1__shuffleseqInputParams (36)
/* ns1:shuffleseqInputParams */
struct ns1__shuffleseqInputParams
{
	int k;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__phxInputParams
#define SOAP_TYPE_ns1__phxInputParams (37)
/* ns1:phxInputParams */
struct ns1__phxInputParams
{
	char *usage;	/* required element of type xsd:string */
	int translate;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__oligomer_USCOREsearchInputParams
#define SOAP_TYPE_ns1__oligomer_USCOREsearchInputParams (38)
/* ns1:oligomer_searchInputParams */
struct ns1__oligomer_USCOREsearchInputParams
{
	char *return_;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREpatternInputParams
#define SOAP_TYPE_ns1__find_USCOREpatternInputParams (39)
/* ns1:find_patternInputParams */
struct ns1__find_USCOREpatternInputParams
{
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__gcwinInputParams
#define SOAP_TYPE_ns1__gcwinInputParams (40)
/* ns1:gcwinInputParams */
struct ns1__gcwinInputParams
{
	int window;	/* required element of type xsd:int */
	int at;	/* required element of type xsd:int */
	int purine;	/* required element of type xsd:int */
	char *application;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
	int keto;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__icdiInputParams
#define SOAP_TYPE_ns1__icdiInputParams (41)
/* ns1:icdiInputParams */
struct ns1__icdiInputParams
{
	int translate;	/* required element of type xsd:int */
	char *id;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__encInputParams
#define SOAP_TYPE_ns1__encInputParams (42)
/* ns1:encInputParams */
struct ns1__encInputParams
{
	int translate;	/* required element of type xsd:int */
	char *id;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__oligomer_USCOREcounterInputParams
#define SOAP_TYPE_ns1__oligomer_USCOREcounterInputParams (43)
/* ns1:oligomer_counterInputParams */
struct ns1__oligomer_USCOREcounterInputParams
{
	int window;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__fopInputParams
#define SOAP_TYPE_ns1__fopInputParams (44)
/* ns1:fopInputParams */
struct ns1__fopInputParams
{
	int translate;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__buiInputParams
#define SOAP_TYPE_ns1__buiInputParams (45)
/* ns1:buiInputParams */
struct ns1__buiInputParams
{
	int translate;	/* required element of type xsd:int */
	char *position;	/* required element of type xsd:string */
	char *id;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREusageInputParams
#define SOAP_TYPE_ns1__codon_USCOREusageInputParams (46)
/* ns1:codon_usageInputParams */
struct ns1__codon_USCOREusageInputParams
{
	int version;	/* required element of type xsd:int */
	char *CDSid;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREdnaAboxInputParams
#define SOAP_TYPE_ns1__find_USCOREdnaAboxInputParams (47)
/* ns1:find_dnaAboxInputParams */
struct ns1__find_USCOREdnaAboxInputParams
{
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__ttestInputParams
#define SOAP_TYPE_ns1__ttestInputParams (48)
/* ns1:ttestInputParams */
struct ns1__ttestInputParams
{
	int paired;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__seq2pngInputParams
#define SOAP_TYPE_ns1__seq2pngInputParams (49)
/* ns1:seq2pngInputParams */
struct ns1__seq2pngInputParams
{
	int width;	/* required element of type xsd:int */
	int window;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__amino_USCOREcounterInputParams
#define SOAP_TYPE_ns1__amino_USCOREcounterInputParams (50)
/* ns1:amino_counterInputParams */
struct ns1__amino_USCOREcounterInputParams
{
	char *CDSid;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__aauiInputParams
#define SOAP_TYPE_ns1__aauiInputParams (51)
/* ns1:aauiInputParams */
struct ns1__aauiInputParams
{
	char *id;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREcompilerInputParams
#define SOAP_TYPE_ns1__codon_USCOREcompilerInputParams (52)
/* ns1:codon_compilerInputParams */
struct ns1__codon_USCOREcompilerInputParams
{
	int translate;	/* required element of type xsd:int */
	char *id;	/* required element of type xsd:string */
<<<<<<< HEAD
	int data;	/* required element of type xsd:int */
=======
	char *data;	/* required element of type xsd:string */
>>>>>>> 1.0.0-beta
	char *output;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
	int startcodon;	/* required element of type xsd:int */
	int stopcodon;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__over_USCORElapping_USCOREfinderInputParams
#define SOAP_TYPE_ns1__over_USCORElapping_USCOREfinderInputParams (53)
/* ns1:over_lapping_finderInputParams */
struct ns1__over_USCORElapping_USCOREfinderInputParams
{
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREiteronInputParams
#define SOAP_TYPE_ns1__find_USCOREiteronInputParams (54)
/* ns1:find_iteronInputParams */
struct ns1__find_USCOREiteronInputParams
{
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__EwInputParams
#define SOAP_TYPE_ns1__EwInputParams (55)
/* ns1:EwInputParams */
struct ns1__EwInputParams
{
	int translate;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREcounterInputParams
#define SOAP_TYPE_ns1__codon_USCOREcounterInputParams (56)
/* ns1:codon_counterInputParams */
struct ns1__codon_USCOREcounterInputParams
{
	char *CDSid;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__view_USCOREcdsInputParams
#define SOAP_TYPE_ns1__view_USCOREcdsInputParams (57)
/* ns1:view_cdsInputParams */
struct ns1__view_USCOREcdsInputParams
{
	int length;	/* required element of type xsd:int */
	int gap;	/* required element of type xsd:int */
	char *application;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCORErelative_USCOREentropyInputParams
#define SOAP_TYPE_ns1__base_USCORErelative_USCOREentropyInputParams (58)
/* ns1:base_relative_entropyInputParams */
struct ns1__base_USCORErelative_USCOREentropyInputParams
{
	int upstream;	/* required element of type xsd:int */
	char *position;	/* required element of type xsd:string */
	int downstream;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int PatLength;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__palindromeInputParams
#define SOAP_TYPE_ns1__palindromeInputParams (59)
/* ns1:palindromeInputParams */
struct ns1__palindromeInputParams
{
	int gtmatch;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	int loop;	/* required element of type xsd:int */
	int shortest;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__genomicskewInputParams
#define SOAP_TYPE_ns1__genomicskewInputParams (60)
/* ns1:genomicskewInputParams */
struct ns1__genomicskewInputParams
{
	int divide;	/* required element of type xsd:int */
	int at;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__query_USCOREstrandInputParams
#define SOAP_TYPE_ns1__query_USCOREstrandInputParams (61)
/* ns1:query_strandInputParams */
struct ns1__query_USCOREstrandInputParams
{
	char *direction;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__gcsiInputParams
#define SOAP_TYPE_ns1__gcsiInputParams (62)
/* ns1:gcsiInputParams */
struct ns1__gcsiInputParams
{
	int p;	/* required element of type xsd:int */
	int window;	/* required element of type xsd:int */
	int version;	/* required element of type xsd:int */
	int purine;	/* required element of type xsd:int */
	int at;	/* required element of type xsd:int */
	int keto;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams
#define SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams (63)
/* ns1:filter_cds_by_atgInputParams */
struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams
{
	int upstream;	/* required element of type xsd:int */
	char *codon;	/* required element of type xsd:string */
	int downstream;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__caiInputParams
#define SOAP_TYPE_ns1__caiInputParams (64)
/* ns1:caiInputParams */
struct ns1__caiInputParams
{
	char *w_USCOREoutput;	/* required element of type xsd:string */
	int translate;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
	char *w_USCOREfilename;	/* required element of type xsd:string */
	char *w_USCOREabsent;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__dinucInputParams
#define SOAP_TYPE_ns1__dinucInputParams (65)
/* ns1:dinucInputParams */
struct ns1__dinucInputParams
{
	char *position;	/* required element of type xsd:string */
	char *id;	/* required element of type xsd:string */
	char *del_USCOREkey;	/* required element of type xsd:string */
	int translate;	/* required element of type xsd:int */
	char *output;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__cgrInputParams
#define SOAP_TYPE_ns1__cgrInputParams (66)
/* ns1:cgrInputParams */
struct ns1__cgrInputParams
{
	int width;	/* required element of type xsd:int */
	int level;	/* required element of type xsd:int */
};
#endif

<<<<<<< HEAD
#ifndef SOAP_TYPE_arrayIn
#define SOAP_TYPE_arrayIn (68)
=======
#ifndef SOAP_TYPE_ns1__B1InputParams
#define SOAP_TYPE_ns1__B1InputParams (67)
/* ns1:B1InputParams */
struct ns1__B1InputParams
{
	char *method;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREcounterInputParams
#define SOAP_TYPE_ns1__base_USCOREcounterInputParams (68)
/* ns1:base_counterInputParams */
struct ns1__base_USCOREcounterInputParams
{
	char *position;	/* required element of type xsd:string */
	int PatLen;	/* required element of type xsd:int */
	int upstream;	/* required element of type xsd:int */
	int downstream;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREz_USCOREvalueInputParams
#define SOAP_TYPE_ns1__base_USCOREz_USCOREvalueInputParams (69)
/* ns1:base_z_valueInputParams */
struct ns1__base_USCOREz_USCOREvalueInputParams
{
	int limit;	/* required element of type xsd:int */
	char *position;	/* required element of type xsd:string */
	int PatLen;	/* required element of type xsd:int */
	int upstream;	/* required element of type xsd:int */
	int downstream;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__kmer_USCOREtableInputParams
#define SOAP_TYPE_ns1__kmer_USCOREtableInputParams (70)
/* ns1:kmer_tableInputParams */
struct ns1__kmer_USCOREtableInputParams
{
	int k;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__lda_USCOREbiasInputParams
#define SOAP_TYPE_ns1__lda_USCOREbiasInputParams (71)
/* ns1:lda_biasInputParams */
struct ns1__lda_USCOREbiasInputParams
{
	char *variable;	/* required element of type xsd:string */
	int coefficients;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__scsInputParams
#define SOAP_TYPE_ns1__scsInputParams (72)
/* ns1:scsInputParams */
struct ns1__scsInputParams
{
	char *id;	/* required element of type xsd:string */
	int translate;	/* required element of type xsd:int */
	char *del_USCOREkey;	/* required element of type xsd:string */
	char *tag;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__S_USCOREvalueInputParams
#define SOAP_TYPE_ns1__S_USCOREvalueInputParams (73)
/* ns1:S_valueInputParams */
struct ns1__S_USCOREvalueInputParams
{
	int sharp;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_arrayIn
#define SOAP_TYPE_arrayIn (74)
>>>>>>> 1.0.0-beta
/* SOAP encoded array of xsd:string schema type: */
struct arrayIn
{
	char **__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_arrayOut
<<<<<<< HEAD
#define SOAP_TYPE_arrayOut (70)
=======
#define SOAP_TYPE_arrayOut (76)
>>>>>>> 1.0.0-beta
/* SOAP encoded array of xsd:string schema type: */
struct arrayOut
{
	char **__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREmvaResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREmvaResponse (73)
=======
#define SOAP_TYPE_ns1__codon_USCOREmvaResponse (79)
>>>>>>> 1.0.0-beta
/* ns1:codon_mvaResponse */
struct ns1__codon_USCOREmvaResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREmva
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREmva (74)
=======
#define SOAP_TYPE_ns1__codon_USCOREmva (80)
>>>>>>> 1.0.0-beta
/* ns1:codon_mva */
struct ns1__codon_USCOREmva
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__codon_USCOREmvaInputParams *_params;	/* optional element of type ns1:codon_mvaInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__P2Response
<<<<<<< HEAD
#define SOAP_TYPE_ns1__P2Response (77)
=======
#define SOAP_TYPE_ns1__P2Response (83)
>>>>>>> 1.0.0-beta
/* ns1:P2Response */
struct ns1__P2Response
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__P2
<<<<<<< HEAD
#define SOAP_TYPE_ns1__P2 (78)
=======
#define SOAP_TYPE_ns1__P2 (84)
>>>>>>> 1.0.0-beta
/* ns1:P2 */
struct ns1__P2
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__P2InputParams *_params;	/* optional element of type ns1:P2InputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__w_USCOREvalueResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__w_USCOREvalueResponse (81)
=======
#define SOAP_TYPE_ns1__w_USCOREvalueResponse (87)
>>>>>>> 1.0.0-beta
/* ns1:w_valueResponse */
struct ns1__w_USCOREvalueResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__w_USCOREvalue
<<<<<<< HEAD
#define SOAP_TYPE_ns1__w_USCOREvalue (82)
=======
#define SOAP_TYPE_ns1__w_USCOREvalue (88)
>>>>>>> 1.0.0-beta
/* ns1:w_value */
struct ns1__w_USCOREvalue
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__w_USCOREvalueInputParams *_params;	/* optional element of type ns1:w_valueInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__splitprintseqResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__splitprintseqResponse (84)
=======
#define SOAP_TYPE_ns1__splitprintseqResponse (90)
>>>>>>> 1.0.0-beta
/* ns1:splitprintseqResponse */
struct ns1__splitprintseqResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__splitprintseq
<<<<<<< HEAD
#define SOAP_TYPE_ns1__splitprintseq (85)
=======
#define SOAP_TYPE_ns1__splitprintseq (91)
>>>>>>> 1.0.0-beta
/* ns1:splitprintseq */
struct ns1__splitprintseq
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__medianResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__medianResponse (88)
=======
#define SOAP_TYPE_ns1__medianResponse (94)
>>>>>>> 1.0.0-beta
/* ns1:medianResponse */
struct ns1__medianResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__median
<<<<<<< HEAD
#define SOAP_TYPE_ns1__median (89)
=======
#define SOAP_TYPE_ns1__median (95)
>>>>>>> 1.0.0-beta
/* ns1:median */
struct ns1__median
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREori_USCOREterResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREori_USCOREterResponse (92)
=======
#define SOAP_TYPE_ns1__find_USCOREori_USCOREterResponse (98)
>>>>>>> 1.0.0-beta
/* ns1:find_ori_terResponse */
struct ns1__find_USCOREori_USCOREterResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREori_USCOREter
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREori_USCOREter (93)
=======
#define SOAP_TYPE_ns1__find_USCOREori_USCOREter (99)
>>>>>>> 1.0.0-beta
/* ns1:find_ori_ter */
struct ns1__find_USCOREori_USCOREter
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__find_USCOREori_USCOREterInputParams *_params;	/* optional element of type ns1:find_ori_terInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__plasmid_USCOREmapResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__plasmid_USCOREmapResponse (96)
=======
#define SOAP_TYPE_ns1__plasmid_USCOREmapResponse (102)
>>>>>>> 1.0.0-beta
/* ns1:plasmid_mapResponse */
struct ns1__plasmid_USCOREmapResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__plasmid_USCOREmap
<<<<<<< HEAD
#define SOAP_TYPE_ns1__plasmid_USCOREmap (97)
=======
#define SOAP_TYPE_ns1__plasmid_USCOREmap (103)
>>>>>>> 1.0.0-beta
/* ns1:plasmid_map */
struct ns1__plasmid_USCOREmap
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__plasmid_USCOREmapInputParams *_params;	/* optional element of type ns1:plasmid_mapInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__sumResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__sumResponse (99)
=======
#define SOAP_TYPE_ns1__sumResponse (105)
>>>>>>> 1.0.0-beta
/* ns1:sumResponse */
struct ns1__sumResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sum
<<<<<<< HEAD
#define SOAP_TYPE_ns1__sum (100)
=======
#define SOAP_TYPE_ns1__sum (106)
>>>>>>> 1.0.0-beta
/* ns1:sum */
struct ns1__sum
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__nucleotide_USCOREperiodicityResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__nucleotide_USCOREperiodicityResponse (103)
=======
#define SOAP_TYPE_ns1__nucleotide_USCOREperiodicityResponse (109)
>>>>>>> 1.0.0-beta
/* ns1:nucleotide_periodicityResponse */
struct ns1__nucleotide_USCOREperiodicityResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__nucleotide_USCOREperiodicity
<<<<<<< HEAD
#define SOAP_TYPE_ns1__nucleotide_USCOREperiodicity (104)
=======
#define SOAP_TYPE_ns1__nucleotide_USCOREperiodicity (110)
>>>>>>> 1.0.0-beta
/* ns1:nucleotide_periodicity */
struct ns1__nucleotide_USCOREperiodicity
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__nucleotide_USCOREperiodicityInputParams *_params;	/* optional element of type ns1:nucleotide_periodicityInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__varianceResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__varianceResponse (106)
=======
#define SOAP_TYPE_ns1__varianceResponse (112)
>>>>>>> 1.0.0-beta
/* ns1:varianceResponse */
struct ns1__varianceResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__variance
<<<<<<< HEAD
#define SOAP_TYPE_ns1__variance (107)
=======
#define SOAP_TYPE_ns1__variance (113)
>>>>>>> 1.0.0-beta
/* ns1:variance */
struct ns1__variance
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__amino_USCOREinfoResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__amino_USCOREinfoResponse (109)
=======
#define SOAP_TYPE_ns1__amino_USCOREinfoResponse (115)
>>>>>>> 1.0.0-beta
/* ns1:amino_infoResponse */
struct ns1__amino_USCOREinfoResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__amino_USCOREinfo
<<<<<<< HEAD
#define SOAP_TYPE_ns1__amino_USCOREinfo (110)
=======
#define SOAP_TYPE_ns1__amino_USCOREinfo (116)
>>>>>>> 1.0.0-beta
/* ns1:amino_info */
struct ns1__amino_USCOREinfo
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__circular_USCOREmapResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__circular_USCOREmapResponse (113)
=======
#define SOAP_TYPE_ns1__circular_USCOREmapResponse (119)
>>>>>>> 1.0.0-beta
/* ns1:circular_mapResponse */
struct ns1__circular_USCOREmapResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__circular_USCOREmap
<<<<<<< HEAD
#define SOAP_TYPE_ns1__circular_USCOREmap (114)
=======
#define SOAP_TYPE_ns1__circular_USCOREmap (120)
>>>>>>> 1.0.0-beta
/* ns1:circular_map */
struct ns1__circular_USCOREmap
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__circular_USCOREmapInputParams *_params;	/* optional element of type ns1:circular_mapInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__togoWSResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__togoWSResponse (117)
=======
#define SOAP_TYPE_ns1__togoWSResponse (123)
>>>>>>> 1.0.0-beta
/* ns1:togoWSResponse */
struct ns1__togoWSResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__togoWS
<<<<<<< HEAD
#define SOAP_TYPE_ns1__togoWS (118)
=======
#define SOAP_TYPE_ns1__togoWS (124)
>>>>>>> 1.0.0-beta
/* ns1:togoWS */
struct ns1__togoWS
{
	char *_query;	/* optional element of type xsd:string */
	struct ns1__togoWSInputParams *_params;	/* optional element of type ns1:togoWSInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__translateResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__translateResponse (120)
=======
#define SOAP_TYPE_ns1__translateResponse (126)
>>>>>>> 1.0.0-beta
/* ns1:translateResponse */
struct ns1__translateResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__translate
<<<<<<< HEAD
#define SOAP_TYPE_ns1__translate (121)
=======
#define SOAP_TYPE_ns1__translate (127)
>>>>>>> 1.0.0-beta
/* ns1:translate */
struct ns1__translate
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__phxResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__phxResponse (124)
=======
#define SOAP_TYPE_ns1__phxResponse (130)
>>>>>>> 1.0.0-beta
/* ns1:phxResponse */
struct ns1__phxResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__phx
<<<<<<< HEAD
#define SOAP_TYPE_ns1__phx (125)
=======
#define SOAP_TYPE_ns1__phx (131)
>>>>>>> 1.0.0-beta
/* ns1:phx */
struct ns1__phx
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__phxInputParams *_params;	/* optional element of type ns1:phxInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__icdiResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__icdiResponse (128)
=======
#define SOAP_TYPE_ns1__icdiResponse (134)
>>>>>>> 1.0.0-beta
/* ns1:icdiResponse */
struct ns1__icdiResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__icdi
<<<<<<< HEAD
#define SOAP_TYPE_ns1__icdi (129)
=======
#define SOAP_TYPE_ns1__icdi (135)
>>>>>>> 1.0.0-beta
/* ns1:icdi */
struct ns1__icdi
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__icdiInputParams *_params;	/* optional element of type ns1:icdiInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__encResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__encResponse (132)
=======
#define SOAP_TYPE_ns1__encResponse (138)
>>>>>>> 1.0.0-beta
/* ns1:encResponse */
struct ns1__encResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__enc
<<<<<<< HEAD
#define SOAP_TYPE_ns1__enc (133)
=======
#define SOAP_TYPE_ns1__enc (139)
>>>>>>> 1.0.0-beta
/* ns1:enc */
struct ns1__enc
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__encInputParams *_params;	/* optional element of type ns1:encInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__fopResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__fopResponse (136)
=======
#define SOAP_TYPE_ns1__fopResponse (142)
>>>>>>> 1.0.0-beta
/* ns1:fopResponse */
struct ns1__fopResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__fop
<<<<<<< HEAD
#define SOAP_TYPE_ns1__fop (137)
=======
#define SOAP_TYPE_ns1__fop (143)
>>>>>>> 1.0.0-beta
/* ns1:fop */
struct ns1__fop
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__fopInputParams *_params;	/* optional element of type ns1:fopInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__buiResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__buiResponse (140)
=======
#define SOAP_TYPE_ns1__buiResponse (146)
>>>>>>> 1.0.0-beta
/* ns1:buiResponse */
struct ns1__buiResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__bui
<<<<<<< HEAD
#define SOAP_TYPE_ns1__bui (141)
=======
#define SOAP_TYPE_ns1__bui (147)
>>>>>>> 1.0.0-beta
/* ns1:bui */
struct ns1__bui
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__buiInputParams *_params;	/* optional element of type ns1:buiInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__dist_USCOREin_USCOREccResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__dist_USCOREin_USCOREccResponse (144)
=======
#define SOAP_TYPE_ns1__dist_USCOREin_USCOREccResponse (149)
>>>>>>> 1.0.0-beta
/* ns1:dist_in_ccResponse */
struct ns1__dist_USCOREin_USCOREccResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__dist_USCOREin_USCOREcc
<<<<<<< HEAD
#define SOAP_TYPE_ns1__dist_USCOREin_USCOREcc (145)
=======
#define SOAP_TYPE_ns1__dist_USCOREin_USCOREcc (150)
>>>>>>> 1.0.0-beta
/* ns1:dist_in_cc */
struct ns1__dist_USCOREin_USCOREcc
{
	char *_sequence;	/* optional element of type xsd:string */
	int _position1;	/* required element of type xsd:int */
	int _position2;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREdnaAboxResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREdnaAboxResponse (148)
=======
#define SOAP_TYPE_ns1__find_USCOREdnaAboxResponse (153)
>>>>>>> 1.0.0-beta
/* ns1:find_dnaAboxResponse */
struct ns1__find_USCOREdnaAboxResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREdnaAbox
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREdnaAbox (149)
=======
#define SOAP_TYPE_ns1__find_USCOREdnaAbox (154)
>>>>>>> 1.0.0-beta
/* ns1:find_dnaAbox */
struct ns1__find_USCOREdnaAbox
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__find_USCOREdnaAboxInputParams *_params;	/* optional element of type ns1:find_dnaAboxInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__ttestResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__ttestResponse (150)
=======
#define SOAP_TYPE_ns1__ttestResponse (155)
>>>>>>> 1.0.0-beta
/* ns1:ttestResponse */
struct ns1__ttestResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__ttest
<<<<<<< HEAD
#define SOAP_TYPE_ns1__ttest (155)
=======
#define SOAP_TYPE_ns1__ttest (160)
>>>>>>> 1.0.0-beta
/* ns1:ttest */
struct ns1__ttest
{
	struct arrayIn *_array1;	/* optional element of type ArrayOfstring */
	struct arrayIn *_array2;	/* optional element of type ArrayOfstring */
	struct ns1__ttestInputParams *_params;	/* optional element of type ns1:ttestInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__seq2pngResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__seq2pngResponse (158)
=======
#define SOAP_TYPE_ns1__seq2pngResponse (163)
>>>>>>> 1.0.0-beta
/* ns1:seq2pngResponse */
struct ns1__seq2pngResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__seq2png
<<<<<<< HEAD
#define SOAP_TYPE_ns1__seq2png (159)
=======
#define SOAP_TYPE_ns1__seq2png (164)
>>>>>>> 1.0.0-beta
/* ns1:seq2png */
struct ns1__seq2png
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__seq2pngInputParams *_params;	/* optional element of type ns1:seq2pngInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__amino_USCOREcounterResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__amino_USCOREcounterResponse (162)
=======
#define SOAP_TYPE_ns1__amino_USCOREcounterResponse (167)
>>>>>>> 1.0.0-beta
/* ns1:amino_counterResponse */
struct ns1__amino_USCOREcounterResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__amino_USCOREcounter
<<<<<<< HEAD
#define SOAP_TYPE_ns1__amino_USCOREcounter (163)
=======
#define SOAP_TYPE_ns1__amino_USCOREcounter (168)
>>>>>>> 1.0.0-beta
/* ns1:amino_counter */
struct ns1__amino_USCOREcounter
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__amino_USCOREcounterInputParams *_params;	/* optional element of type ns1:amino_counterInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__aauiResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__aauiResponse (166)
=======
#define SOAP_TYPE_ns1__aauiResponse (171)
>>>>>>> 1.0.0-beta
/* ns1:aauiResponse */
struct ns1__aauiResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__aaui
<<<<<<< HEAD
#define SOAP_TYPE_ns1__aaui (167)
=======
#define SOAP_TYPE_ns1__aaui (172)
>>>>>>> 1.0.0-beta
/* ns1:aaui */
struct ns1__aaui
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__aauiInputParams *_params;	/* optional element of type ns1:aauiInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREcompilerResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREcompilerResponse (170)
=======
#define SOAP_TYPE_ns1__codon_USCOREcompilerResponse (175)
>>>>>>> 1.0.0-beta
/* ns1:codon_compilerResponse */
struct ns1__codon_USCOREcompilerResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREcompiler
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREcompiler (171)
=======
#define SOAP_TYPE_ns1__codon_USCOREcompiler (176)
>>>>>>> 1.0.0-beta
/* ns1:codon_compiler */
struct ns1__codon_USCOREcompiler
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__codon_USCOREcompilerInputParams *_params;	/* optional element of type ns1:codon_compilerInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__over_USCORElapping_USCOREfinderResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__over_USCORElapping_USCOREfinderResponse (174)
=======
#define SOAP_TYPE_ns1__over_USCORElapping_USCOREfinderResponse (179)
>>>>>>> 1.0.0-beta
/* ns1:over_lapping_finderResponse */
struct ns1__over_USCORElapping_USCOREfinderResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__over_USCORElapping_USCOREfinder
<<<<<<< HEAD
#define SOAP_TYPE_ns1__over_USCORElapping_USCOREfinder (175)
=======
#define SOAP_TYPE_ns1__over_USCORElapping_USCOREfinder (180)
>>>>>>> 1.0.0-beta
/* ns1:over_lapping_finder */
struct ns1__over_USCORElapping_USCOREfinder
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__over_USCORElapping_USCOREfinderInputParams *_params;	/* optional element of type ns1:over_lapping_finderInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__EwResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__EwResponse (178)
=======
#define SOAP_TYPE_ns1__EwResponse (183)
>>>>>>> 1.0.0-beta
/* ns1:EwResponse */
struct ns1__EwResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__Ew
<<<<<<< HEAD
#define SOAP_TYPE_ns1__Ew (179)
=======
#define SOAP_TYPE_ns1__Ew (184)
>>>>>>> 1.0.0-beta
/* ns1:Ew */
struct ns1__Ew
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__EwInputParams *_params;	/* optional element of type ns1:EwInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCORErelative_USCOREentropyResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__base_USCORErelative_USCOREentropyResponse (182)
=======
#define SOAP_TYPE_ns1__base_USCORErelative_USCOREentropyResponse (187)
>>>>>>> 1.0.0-beta
/* ns1:base_relative_entropyResponse */
struct ns1__base_USCORErelative_USCOREentropyResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCORErelative_USCOREentropy
<<<<<<< HEAD
#define SOAP_TYPE_ns1__base_USCORErelative_USCOREentropy (183)
=======
#define SOAP_TYPE_ns1__base_USCORErelative_USCOREentropy (188)
>>>>>>> 1.0.0-beta
/* ns1:base_relative_entropy */
struct ns1__base_USCORErelative_USCOREentropy
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__base_USCORErelative_USCOREentropyInputParams *_params;	/* optional element of type ns1:base_relative_entropyInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__view_USCOREcdsResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__view_USCOREcdsResponse (186)
=======
#define SOAP_TYPE_ns1__view_USCOREcdsResponse (191)
>>>>>>> 1.0.0-beta
/* ns1:view_cdsResponse */
struct ns1__view_USCOREcdsResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__view_USCOREcds
<<<<<<< HEAD
#define SOAP_TYPE_ns1__view_USCOREcds (187)
=======
#define SOAP_TYPE_ns1__view_USCOREcds (192)
>>>>>>> 1.0.0-beta
/* ns1:view_cds */
struct ns1__view_USCOREcds
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__view_USCOREcdsInputParams *_params;	/* optional element of type ns1:view_cdsInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__query_USCOREstrandResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__query_USCOREstrandResponse (190)
=======
#define SOAP_TYPE_ns1__query_USCOREstrandResponse (195)
>>>>>>> 1.0.0-beta
/* ns1:query_strandResponse */
struct ns1__query_USCOREstrandResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__query_USCOREstrand
<<<<<<< HEAD
#define SOAP_TYPE_ns1__query_USCOREstrand (191)
=======
#define SOAP_TYPE_ns1__query_USCOREstrand (196)
>>>>>>> 1.0.0-beta
/* ns1:query_strand */
struct ns1__query_USCOREstrand
{
	char *_sequence;	/* optional element of type xsd:string */
	char *_position;	/* optional element of type xsd:string */
	struct ns1__query_USCOREstrandInputParams *_params;	/* optional element of type ns1:query_strandInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__genomicskewResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genomicskewResponse (194)
=======
#define SOAP_TYPE_ns1__genomicskewResponse (199)
>>>>>>> 1.0.0-beta
/* ns1:genomicskewResponse */
struct ns1__genomicskewResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genomicskew
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genomicskew (195)
=======
#define SOAP_TYPE_ns1__genomicskew (200)
>>>>>>> 1.0.0-beta
/* ns1:genomicskew */
struct ns1__genomicskew
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__genomicskewInputParams *_params;	/* optional element of type ns1:genomicskewInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatgResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatgResponse (196)
=======
#define SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatgResponse (201)
>>>>>>> 1.0.0-beta
/* ns1:filter_cds_by_atgResponse */
struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatg
<<<<<<< HEAD
#define SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatg (200)
=======
#define SOAP_TYPE_ns1__filter_USCOREcds_USCOREby_USCOREatg (205)
>>>>>>> 1.0.0-beta
/* ns1:filter_cds_by_atg */
struct ns1__filter_USCOREcds_USCOREby_USCOREatg
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams *_params;	/* optional element of type ns1:filter_cds_by_atgInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__gcsiResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__gcsiResponse (203)
=======
#define SOAP_TYPE_ns1__gcsiResponse (208)
>>>>>>> 1.0.0-beta
/* ns1:gcsiResponse */
struct ns1__gcsiResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__gcsi
<<<<<<< HEAD
#define SOAP_TYPE_ns1__gcsi (204)
=======
#define SOAP_TYPE_ns1__gcsi (209)
>>>>>>> 1.0.0-beta
/* ns1:gcsi */
struct ns1__gcsi
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__gcsiInputParams *_params;	/* optional element of type ns1:gcsiInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__caiResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__caiResponse (207)
=======
#define SOAP_TYPE_ns1__caiResponse (212)
>>>>>>> 1.0.0-beta
/* ns1:caiResponse */
struct ns1__caiResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__cai
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cai (208)
=======
#define SOAP_TYPE_ns1__cai (213)
>>>>>>> 1.0.0-beta
/* ns1:cai */
struct ns1__cai
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__caiInputParams *_params;	/* optional element of type ns1:caiInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__maxdexResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__maxdexResponse (210)
=======
#define SOAP_TYPE_ns1__maxdexResponse (215)
>>>>>>> 1.0.0-beta
/* ns1:maxdexResponse */
struct ns1__maxdexResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__maxdex
<<<<<<< HEAD
#define SOAP_TYPE_ns1__maxdex (211)
=======
#define SOAP_TYPE_ns1__maxdex (216)
>>>>>>> 1.0.0-beta
/* ns1:maxdex */
struct ns1__maxdex
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__maxResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__maxResponse (213)
=======
#define SOAP_TYPE_ns1__maxResponse (218)
>>>>>>> 1.0.0-beta
/* ns1:maxResponse */
struct ns1__maxResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__max
<<<<<<< HEAD
#define SOAP_TYPE_ns1__max (214)
=======
#define SOAP_TYPE_ns1__max (219)
>>>>>>> 1.0.0-beta
/* ns1:max */
struct ns1__max
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__query_USCOREarmResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__query_USCOREarmResponse (216)
=======
#define SOAP_TYPE_ns1__query_USCOREarmResponse (221)
>>>>>>> 1.0.0-beta
/* ns1:query_armResponse */
struct ns1__query_USCOREarmResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__query_USCOREarm
<<<<<<< HEAD
#define SOAP_TYPE_ns1__query_USCOREarm (217)
=======
#define SOAP_TYPE_ns1__query_USCOREarm (222)
>>>>>>> 1.0.0-beta
/* ns1:query_arm */
struct ns1__query_USCOREarm
{
	char *_sequence;	/* optional element of type xsd:string */
	int _position;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__mindexResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__mindexResponse (219)
=======
#define SOAP_TYPE_ns1__mindexResponse (224)
>>>>>>> 1.0.0-beta
/* ns1:mindexResponse */
struct ns1__mindexResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__mindex
<<<<<<< HEAD
#define SOAP_TYPE_ns1__mindex (220)
=======
#define SOAP_TYPE_ns1__mindex (225)
>>>>>>> 1.0.0-beta
/* ns1:mindex */
struct ns1__mindex
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__peptide_USCOREmassResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__peptide_USCOREmassResponse (222)
=======
#define SOAP_TYPE_ns1__peptide_USCOREmassResponse (227)
>>>>>>> 1.0.0-beta
/* ns1:peptide_massResponse */
struct ns1__peptide_USCOREmassResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__peptide_USCOREmass
<<<<<<< HEAD
#define SOAP_TYPE_ns1__peptide_USCOREmass (223)
=======
#define SOAP_TYPE_ns1__peptide_USCOREmass (228)
>>>>>>> 1.0.0-beta
/* ns1:peptide_mass */
struct ns1__peptide_USCOREmass
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__consensus_USCOREzResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__consensus_USCOREzResponse (226)
=======
#define SOAP_TYPE_ns1__consensus_USCOREzResponse (231)
>>>>>>> 1.0.0-beta
/* ns1:consensus_zResponse */
struct ns1__consensus_USCOREzResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__consensus_USCOREz
<<<<<<< HEAD
#define SOAP_TYPE_ns1__consensus_USCOREz (227)
=======
#define SOAP_TYPE_ns1__consensus_USCOREz (232)
>>>>>>> 1.0.0-beta
/* ns1:consensus_z */
struct ns1__consensus_USCOREz
{
	struct arrayIn *_array_USCOREseq;	/* optional element of type ArrayOfstring */
	struct ns1__consensus_USCOREzInputParams *_params;	/* optional element of type ns1:consensus_zInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__genome_USCOREmapResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genome_USCOREmapResponse (230)
=======
#define SOAP_TYPE_ns1__genome_USCOREmapResponse (235)
>>>>>>> 1.0.0-beta
/* ns1:genome_mapResponse */
struct ns1__genome_USCOREmapResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genome_USCOREmap
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genome_USCOREmap (231)
=======
#define SOAP_TYPE_ns1__genome_USCOREmap (236)
>>>>>>> 1.0.0-beta
/* ns1:genome_map */
struct ns1__genome_USCOREmap
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__genome_USCOREmapInputParams *_params;	/* optional element of type ns1:genome_mapInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__longest_USCOREORFResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__longest_USCOREORFResponse (233)
=======
#define SOAP_TYPE_ns1__longest_USCOREORFResponse (238)
>>>>>>> 1.0.0-beta
/* ns1:longest_ORFResponse */
struct ns1__longest_USCOREORFResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__longest_USCOREORF
<<<<<<< HEAD
#define SOAP_TYPE_ns1__longest_USCOREORF (234)
=======
#define SOAP_TYPE_ns1__longest_USCOREORF (239)
>>>>>>> 1.0.0-beta
/* ns1:longest_ORF */
struct ns1__longest_USCOREORF
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__rep_USCOREori_USCOREterResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__rep_USCOREori_USCOREterResponse (237)
=======
#define SOAP_TYPE_ns1__rep_USCOREori_USCOREterResponse (242)
>>>>>>> 1.0.0-beta
/* ns1:rep_ori_terResponse */
struct ns1__rep_USCOREori_USCOREterResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__rep_USCOREori_USCOREter
<<<<<<< HEAD
#define SOAP_TYPE_ns1__rep_USCOREori_USCOREter (238)
=======
#define SOAP_TYPE_ns1__rep_USCOREori_USCOREter (243)
>>>>>>> 1.0.0-beta
/* ns1:rep_ori_ter */
struct ns1__rep_USCOREori_USCOREter
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__rep_USCOREori_USCOREterInputParams *_params;	/* optional element of type ns1:rep_ori_terInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__calc_USCOREpIResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__calc_USCOREpIResponse (240)
=======
#define SOAP_TYPE_ns1__calc_USCOREpIResponse (245)
>>>>>>> 1.0.0-beta
/* ns1:calc_pIResponse */
struct ns1__calc_USCOREpIResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__calc_USCOREpI
<<<<<<< HEAD
#define SOAP_TYPE_ns1__calc_USCOREpI (241)
=======
#define SOAP_TYPE_ns1__calc_USCOREpI (246)
>>>>>>> 1.0.0-beta
/* ns1:calc_pI */
struct ns1__calc_USCOREpI
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__DoubleHelixResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__DoubleHelixResponse (244)
=======
#define SOAP_TYPE_ns1__DoubleHelixResponse (249)
>>>>>>> 1.0.0-beta
/* ns1:DoubleHelixResponse */
struct ns1__DoubleHelixResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__DoubleHelix
<<<<<<< HEAD
#define SOAP_TYPE_ns1__DoubleHelix (245)
=======
#define SOAP_TYPE_ns1__DoubleHelix (250)
>>>>>>> 1.0.0-beta
/* ns1:DoubleHelix */
struct ns1__DoubleHelix
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__DoubleHelixInputParams *_params;	/* optional element of type ns1:DoubleHelixInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREentropyResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__base_USCOREentropyResponse (248)
=======
#define SOAP_TYPE_ns1__base_USCOREentropyResponse (253)
>>>>>>> 1.0.0-beta
/* ns1:base_entropyResponse */
struct ns1__base_USCOREentropyResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREentropy
<<<<<<< HEAD
#define SOAP_TYPE_ns1__base_USCOREentropy (249)
=======
#define SOAP_TYPE_ns1__base_USCOREentropy (254)
>>>>>>> 1.0.0-beta
/* ns1:base_entropy */
struct ns1__base_USCOREentropy
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__base_USCOREentropyInputParams *_params;	/* optional element of type ns1:base_entropyInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__to_USCOREfastaResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__to_USCOREfastaResponse (252)
=======
#define SOAP_TYPE_ns1__to_USCOREfastaResponse (257)
>>>>>>> 1.0.0-beta
/* ns1:to_fastaResponse */
struct ns1__to_USCOREfastaResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__to_USCOREfasta
<<<<<<< HEAD
#define SOAP_TYPE_ns1__to_USCOREfasta (253)
=======
#define SOAP_TYPE_ns1__to_USCOREfasta (258)
>>>>>>> 1.0.0-beta
/* ns1:to_fasta */
struct ns1__to_USCOREfasta
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__to_USCOREfastaInputParams *_params;	/* optional element of type ns1:to_fastaInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREdifResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREdifResponse (254)
=======
#define SOAP_TYPE_ns1__find_USCOREdifResponse (259)
>>>>>>> 1.0.0-beta
/* ns1:find_difResponse */
struct ns1__find_USCOREdifResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREdif
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREdif (258)
=======
#define SOAP_TYPE_ns1__find_USCOREdif (263)
>>>>>>> 1.0.0-beta
/* ns1:find_dif */
struct ns1__find_USCOREdif
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__find_USCOREdifInputParams *_params;	/* optional element of type ns1:find_difInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__cbiResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cbiResponse (261)
=======
#define SOAP_TYPE_ns1__cbiResponse (266)
>>>>>>> 1.0.0-beta
/* ns1:cbiResponse */
struct ns1__cbiResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__cbi
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cbi (262)
=======
#define SOAP_TYPE_ns1__cbi (267)
>>>>>>> 1.0.0-beta
/* ns1:cbi */
struct ns1__cbi
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__cbiInputParams *_params;	/* optional element of type ns1:cbiInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__genes_USCOREfrom_USCOREoriResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genes_USCOREfrom_USCOREoriResponse (263)
=======
#define SOAP_TYPE_ns1__genes_USCOREfrom_USCOREoriResponse (268)
>>>>>>> 1.0.0-beta
/* ns1:genes_from_oriResponse */
struct ns1__genes_USCOREfrom_USCOREoriResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__genes_USCOREfrom_USCOREori
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genes_USCOREfrom_USCOREori (267)
=======
#define SOAP_TYPE_ns1__genes_USCOREfrom_USCOREori (272)
>>>>>>> 1.0.0-beta
/* ns1:genes_from_ori */
struct ns1__genes_USCOREfrom_USCOREori
{
	char *_sequence;	/* optional element of type xsd:string */
	char *_direction;	/* optional element of type xsd:string */
	struct ns1__genes_USCOREfrom_USCOREoriInputParams *_params;	/* optional element of type ns1:genes_from_oriInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__geneskewResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__geneskewResponse (270)
=======
#define SOAP_TYPE_ns1__geneskewResponse (275)
>>>>>>> 1.0.0-beta
/* ns1:geneskewResponse */
struct ns1__geneskewResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__geneskew
<<<<<<< HEAD
#define SOAP_TYPE_ns1__geneskew (271)
=======
#define SOAP_TYPE_ns1__geneskew (276)
>>>>>>> 1.0.0-beta
/* ns1:geneskew */
struct ns1__geneskew
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__geneskewInputParams *_params;	/* optional element of type ns1:geneskewInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__standard_USCOREdeviationResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__standard_USCOREdeviationResponse (273)
=======
#define SOAP_TYPE_ns1__standard_USCOREdeviationResponse (278)
>>>>>>> 1.0.0-beta
/* ns1:standard_deviationResponse */
struct ns1__standard_USCOREdeviationResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__standard_USCOREdeviation
<<<<<<< HEAD
#define SOAP_TYPE_ns1__standard_USCOREdeviation (274)
=======
#define SOAP_TYPE_ns1__standard_USCOREdeviation (279)
>>>>>>> 1.0.0-beta
/* ns1:standard_deviation */
struct ns1__standard_USCOREdeviation
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__corResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__corResponse (275)
=======
#define SOAP_TYPE_ns1__corResponse (280)
>>>>>>> 1.0.0-beta
/* ns1:corResponse */
struct ns1__corResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__cor
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cor (279)
=======
#define SOAP_TYPE_ns1__cor (284)
>>>>>>> 1.0.0-beta
/* ns1:cor */
struct ns1__cor
{
	struct arrayIn *_array1;	/* optional element of type ArrayOfstring */
	struct arrayIn *_array2;	/* optional element of type ArrayOfstring */
	struct ns1__corInputParams *_params;	/* optional element of type ns1:corInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__cumulativeResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cumulativeResponse (280)
=======
#define SOAP_TYPE_ns1__cumulativeResponse (285)
>>>>>>> 1.0.0-beta
/* ns1:cumulativeResponse */
struct ns1__cumulativeResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__cumulative
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cumulative (283)
=======
#define SOAP_TYPE_ns1__cumulative (288)
>>>>>>> 1.0.0-beta
/* ns1:cumulative */
struct ns1__cumulative
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__delta_USCOREencResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__delta_USCOREencResponse (285)
=======
#define SOAP_TYPE_ns1__delta_USCOREencResponse (290)
>>>>>>> 1.0.0-beta
/* ns1:delta_encResponse */
struct ns1__delta_USCOREencResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__delta_USCOREenc
<<<<<<< HEAD
#define SOAP_TYPE_ns1__delta_USCOREenc (286)
=======
#define SOAP_TYPE_ns1__delta_USCOREenc (291)
>>>>>>> 1.0.0-beta
/* ns1:delta_enc */
struct ns1__delta_USCOREenc
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__delta_USCOREgcskewResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__delta_USCOREgcskewResponse (289)
=======
#define SOAP_TYPE_ns1__delta_USCOREgcskewResponse (294)
>>>>>>> 1.0.0-beta
/* ns1:delta_gcskewResponse */
struct ns1__delta_USCOREgcskewResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__delta_USCOREgcskew
<<<<<<< HEAD
#define SOAP_TYPE_ns1__delta_USCOREgcskew (290)
=======
#define SOAP_TYPE_ns1__delta_USCOREgcskew (295)
>>>>>>> 1.0.0-beta
/* ns1:delta_gcskew */
struct ns1__delta_USCOREgcskew
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__delta_USCOREgcskewInputParams *_params;	/* optional element of type ns1:delta_gcskewInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__molecular_USCOREweightResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__molecular_USCOREweightResponse (293)
=======
#define SOAP_TYPE_ns1__molecular_USCOREweightResponse (298)
>>>>>>> 1.0.0-beta
/* ns1:molecular_weightResponse */
struct ns1__molecular_USCOREweightResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__molecular_USCOREweight
<<<<<<< HEAD
#define SOAP_TYPE_ns1__molecular_USCOREweight (294)
=======
#define SOAP_TYPE_ns1__molecular_USCOREweight (299)
>>>>>>> 1.0.0-beta
/* ns1:molecular_weight */
struct ns1__molecular_USCOREweight
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__molecular_USCOREweightInputParams *_params;	/* optional element of type ns1:molecular_weightInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__gcskewResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__gcskewResponse (297)
=======
#define SOAP_TYPE_ns1__gcskewResponse (302)
>>>>>>> 1.0.0-beta
/* ns1:gcskewResponse */
struct ns1__gcskewResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__gcskew
<<<<<<< HEAD
#define SOAP_TYPE_ns1__gcskew (298)
=======
#define SOAP_TYPE_ns1__gcskew (303)
>>>>>>> 1.0.0-beta
/* ns1:gcskew */
struct ns1__gcskew
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__gcskewInputParams *_params;	/* optional element of type ns1:gcskewInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__genome_USCOREmap3Response
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genome_USCOREmap3Response (301)
=======
#define SOAP_TYPE_ns1__genome_USCOREmap3Response (306)
>>>>>>> 1.0.0-beta
/* ns1:genome_map3Response */
struct ns1__genome_USCOREmap3Response
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genome_USCOREmap3
<<<<<<< HEAD
#define SOAP_TYPE_ns1__genome_USCOREmap3 (302)
=======
#define SOAP_TYPE_ns1__genome_USCOREmap3 (307)
>>>>>>> 1.0.0-beta
/* ns1:genome_map3 */
struct ns1__genome_USCOREmap3
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__genome_USCOREmap3InputParams *_params;	/* optional element of type ns1:genome_map3InputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__seqinfoResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__seqinfoResponse (304)
=======
#define SOAP_TYPE_ns1__seqinfoResponse (309)
>>>>>>> 1.0.0-beta
/* ns1:seqinfoResponse */
struct ns1__seqinfoResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__seqinfo
<<<<<<< HEAD
#define SOAP_TYPE_ns1__seqinfo (305)
=======
#define SOAP_TYPE_ns1__seqinfo (310)
>>>>>>> 1.0.0-beta
/* ns1:seqinfo */
struct ns1__seqinfo
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__signatureResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__signatureResponse (308)
=======
#define SOAP_TYPE_ns1__signatureResponse (313)
>>>>>>> 1.0.0-beta
/* ns1:signatureResponse */
struct ns1__signatureResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__signature
<<<<<<< HEAD
#define SOAP_TYPE_ns1__signature (309)
=======
#define SOAP_TYPE_ns1__signature (314)
>>>>>>> 1.0.0-beta
/* ns1:signature */
struct ns1__signature
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__signatureInputParams *_params;	/* optional element of type ns1:signatureInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontentResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontentResponse (312)
=======
#define SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontentResponse (317)
>>>>>>> 1.0.0-beta
/* ns1:base_information_contentResponse */
struct ns1__base_USCOREinformation_USCOREcontentResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontent
<<<<<<< HEAD
#define SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontent (313)
=======
#define SOAP_TYPE_ns1__base_USCOREinformation_USCOREcontent (318)
>>>>>>> 1.0.0-beta
/* ns1:base_information_content */
struct ns1__base_USCOREinformation_USCOREcontent
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__base_USCOREinformation_USCOREcontentInputParams *_params;	/* optional element of type ns1:base_information_contentInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__dnawalkResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__dnawalkResponse (316)
=======
#define SOAP_TYPE_ns1__dnawalkResponse (321)
>>>>>>> 1.0.0-beta
/* ns1:dnawalkResponse */
struct ns1__dnawalkResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__dnawalk
<<<<<<< HEAD
#define SOAP_TYPE_ns1__dnawalk (317)
=======
#define SOAP_TYPE_ns1__dnawalk (322)
>>>>>>> 1.0.0-beta
/* ns1:dnawalk */
struct ns1__dnawalk
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__dnawalkInputParams *_params;	/* optional element of type ns1:dnawalkInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREterResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREterResponse (318)
=======
#define SOAP_TYPE_ns1__find_USCOREterResponse (323)
>>>>>>> 1.0.0-beta
/* ns1:find_terResponse */
struct ns1__find_USCOREterResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREter
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREter (322)
=======
#define SOAP_TYPE_ns1__find_USCOREter (327)
>>>>>>> 1.0.0-beta
/* ns1:find_ter */
struct ns1__find_USCOREter
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__find_USCOREterInputParams *_params;	/* optional element of type ns1:find_terInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__shuffleseqResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__shuffleseqResponse (325)
=======
#define SOAP_TYPE_ns1__shuffleseqResponse (330)
>>>>>>> 1.0.0-beta
/* ns1:shuffleseqResponse */
struct ns1__shuffleseqResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__shuffleseq
<<<<<<< HEAD
#define SOAP_TYPE_ns1__shuffleseq (326)
=======
#define SOAP_TYPE_ns1__shuffleseq (331)
>>>>>>> 1.0.0-beta
/* ns1:shuffleseq */
struct ns1__shuffleseq
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__shuffleseqInputParams *_params;	/* optional element of type ns1:shuffleseqInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__oligomer_USCOREsearchResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__oligomer_USCOREsearchResponse (329)
=======
#define SOAP_TYPE_ns1__oligomer_USCOREsearchResponse (334)
>>>>>>> 1.0.0-beta
/* ns1:oligomer_searchResponse */
struct ns1__oligomer_USCOREsearchResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__oligomer_USCOREsearch
<<<<<<< HEAD
#define SOAP_TYPE_ns1__oligomer_USCOREsearch (330)
=======
#define SOAP_TYPE_ns1__oligomer_USCOREsearch (335)
>>>>>>> 1.0.0-beta
/* ns1:oligomer_search */
struct ns1__oligomer_USCOREsearch
{
	char *_sequence;	/* optional element of type xsd:string */
	char *_oligomer;	/* optional element of type xsd:string */
	struct ns1__oligomer_USCOREsearchInputParams *_params;	/* optional element of type ns1:oligomer_searchInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREpatternResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREpatternResponse (333)
=======
#define SOAP_TYPE_ns1__find_USCOREpatternResponse (338)
>>>>>>> 1.0.0-beta
/* ns1:find_patternResponse */
struct ns1__find_USCOREpatternResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREpattern
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREpattern (334)
=======
#define SOAP_TYPE_ns1__find_USCOREpattern (339)
>>>>>>> 1.0.0-beta
/* ns1:find_pattern */
struct ns1__find_USCOREpattern
{
	char *_sequence;	/* optional element of type xsd:string */
	char *_pattern;	/* optional element of type xsd:string */
	struct ns1__find_USCOREpatternInputParams *_params;	/* optional element of type ns1:find_patternInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__gcwinResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__gcwinResponse (337)
=======
#define SOAP_TYPE_ns1__gcwinResponse (342)
>>>>>>> 1.0.0-beta
/* ns1:gcwinResponse */
struct ns1__gcwinResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__gcwin
<<<<<<< HEAD
#define SOAP_TYPE_ns1__gcwin (338)
=======
#define SOAP_TYPE_ns1__gcwin (343)
>>>>>>> 1.0.0-beta
/* ns1:gcwin */
struct ns1__gcwin
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__gcwinInputParams *_params;	/* optional element of type ns1:gcwinInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__oligomer_USCOREcounterResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__oligomer_USCOREcounterResponse (341)
=======
#define SOAP_TYPE_ns1__oligomer_USCOREcounterResponse (346)
>>>>>>> 1.0.0-beta
/* ns1:oligomer_counterResponse */
struct ns1__oligomer_USCOREcounterResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__oligomer_USCOREcounter
<<<<<<< HEAD
#define SOAP_TYPE_ns1__oligomer_USCOREcounter (342)
=======
#define SOAP_TYPE_ns1__oligomer_USCOREcounter (347)
>>>>>>> 1.0.0-beta
/* ns1:oligomer_counter */
struct ns1__oligomer_USCOREcounter
{
	char *_sequence;	/* optional element of type xsd:string */
	char *_oligomer;	/* optional element of type xsd:string */
	struct ns1__oligomer_USCOREcounterInputParams *_params;	/* optional element of type ns1:oligomer_counterInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREusageResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREusageResponse (345)
=======
#define SOAP_TYPE_ns1__codon_USCOREusageResponse (350)
>>>>>>> 1.0.0-beta
/* ns1:codon_usageResponse */
struct ns1__codon_USCOREusageResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREusage
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREusage (346)
=======
#define SOAP_TYPE_ns1__codon_USCOREusage (351)
>>>>>>> 1.0.0-beta
/* ns1:codon_usage */
struct ns1__codon_USCOREusage
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__codon_USCOREusageInputParams *_params;	/* optional element of type ns1:codon_usageInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__minResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__minResponse (348)
=======
#define SOAP_TYPE_ns1__minResponse (353)
>>>>>>> 1.0.0-beta
/* ns1:minResponse */
struct ns1__minResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__min
<<<<<<< HEAD
#define SOAP_TYPE_ns1__min (349)
=======
#define SOAP_TYPE_ns1__min (354)
>>>>>>> 1.0.0-beta
/* ns1:min */
struct ns1__min
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREiteronResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREiteronResponse (352)
=======
#define SOAP_TYPE_ns1__find_USCOREiteronResponse (357)
>>>>>>> 1.0.0-beta
/* ns1:find_iteronResponse */
struct ns1__find_USCOREiteronResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__find_USCOREiteron
<<<<<<< HEAD
#define SOAP_TYPE_ns1__find_USCOREiteron (353)
=======
#define SOAP_TYPE_ns1__find_USCOREiteron (358)
>>>>>>> 1.0.0-beta
/* ns1:find_iteron */
struct ns1__find_USCOREiteron
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__find_USCOREiteronInputParams *_params;	/* optional element of type ns1:find_iteronInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__complementResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__complementResponse (355)
=======
#define SOAP_TYPE_ns1__complementResponse (360)
>>>>>>> 1.0.0-beta
/* ns1:complementResponse */
struct ns1__complementResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__complement
<<<<<<< HEAD
#define SOAP_TYPE_ns1__complement (356)
=======
#define SOAP_TYPE_ns1__complement (361)
>>>>>>> 1.0.0-beta
/* ns1:complement */
struct ns1__complement
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__meanResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__meanResponse (358)
=======
#define SOAP_TYPE_ns1__meanResponse (363)
>>>>>>> 1.0.0-beta
/* ns1:meanResponse */
struct ns1__meanResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__mean
<<<<<<< HEAD
#define SOAP_TYPE_ns1__mean (359)
=======
#define SOAP_TYPE_ns1__mean (364)
>>>>>>> 1.0.0-beta
/* ns1:mean */
struct ns1__mean
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREcounterResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREcounterResponse (362)
=======
#define SOAP_TYPE_ns1__codon_USCOREcounterResponse (367)
>>>>>>> 1.0.0-beta
/* ns1:codon_counterResponse */
struct ns1__codon_USCOREcounterResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__codon_USCOREcounter
<<<<<<< HEAD
#define SOAP_TYPE_ns1__codon_USCOREcounter (363)
=======
#define SOAP_TYPE_ns1__codon_USCOREcounter (368)
>>>>>>> 1.0.0-beta
/* ns1:codon_counter */
struct ns1__codon_USCOREcounter
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__codon_USCOREcounterInputParams *_params;	/* optional element of type ns1:codon_counterInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__entrezResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__entrezResponse (365)
=======
#define SOAP_TYPE_ns1__entrezResponse (370)
>>>>>>> 1.0.0-beta
/* ns1:entrezResponse */
struct ns1__entrezResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__entrez
<<<<<<< HEAD
#define SOAP_TYPE_ns1__entrez (366)
=======
#define SOAP_TYPE_ns1__entrez (371)
>>>>>>> 1.0.0-beta
/* ns1:entrez */
struct ns1__entrez
{
	char *_database;	/* optional element of type xsd:string */
	char *_query;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__palindromeResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__palindromeResponse (369)
=======
#define SOAP_TYPE_ns1__palindromeResponse (374)
>>>>>>> 1.0.0-beta
/* ns1:palindromeResponse */
struct ns1__palindromeResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__palindrome
<<<<<<< HEAD
#define SOAP_TYPE_ns1__palindrome (370)
=======
#define SOAP_TYPE_ns1__palindrome (375)
>>>>>>> 1.0.0-beta
/* ns1:palindrome */
struct ns1__palindrome
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__palindromeInputParams *_params;	/* optional element of type ns1:palindromeInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__least_USCOREsquares_USCOREfitResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__least_USCOREsquares_USCOREfitResponse (371)
=======
#define SOAP_TYPE_ns1__least_USCOREsquares_USCOREfitResponse (376)
>>>>>>> 1.0.0-beta
/* ns1:least_squares_fitResponse */
struct ns1__least_USCOREsquares_USCOREfitResponse
{
	struct arrayOut *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__least_USCOREsquares_USCOREfit
<<<<<<< HEAD
#define SOAP_TYPE_ns1__least_USCOREsquares_USCOREfit (374)
=======
#define SOAP_TYPE_ns1__least_USCOREsquares_USCOREfit (379)
>>>>>>> 1.0.0-beta
/* ns1:least_squares_fit */
struct ns1__least_USCOREsquares_USCOREfit
{
	struct arrayIn *_array;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns1__dinucResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__dinucResponse (377)
=======
#define SOAP_TYPE_ns1__dinucResponse (382)
>>>>>>> 1.0.0-beta
/* ns1:dinucResponse */
struct ns1__dinucResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__dinuc
<<<<<<< HEAD
#define SOAP_TYPE_ns1__dinuc (378)
=======
#define SOAP_TYPE_ns1__dinuc (383)
>>>>>>> 1.0.0-beta
/* ns1:dinuc */
struct ns1__dinuc
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__dinucInputParams *_params;	/* optional element of type ns1:dinucInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__cgrResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cgrResponse (381)
=======
#define SOAP_TYPE_ns1__cgrResponse (386)
>>>>>>> 1.0.0-beta
/* ns1:cgrResponse */
struct ns1__cgrResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__cgr
<<<<<<< HEAD
#define SOAP_TYPE_ns1__cgr (382)
=======
#define SOAP_TYPE_ns1__cgr (387)
>>>>>>> 1.0.0-beta
/* ns1:cgr */
struct ns1__cgr
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__cgrInputParams *_params;	/* optional element of type ns1:cgrInputParams */
};
#endif

<<<<<<< HEAD
#ifndef SOAP_TYPE_ns1__helpResponse
#define SOAP_TYPE_ns1__helpResponse (384)
=======
#ifndef SOAP_TYPE_ns1__B1Response
#define SOAP_TYPE_ns1__B1Response (390)
/* ns1:B1Response */
struct ns1__B1Response
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__B1
#define SOAP_TYPE_ns1__B1 (391)
/* ns1:B1 */
struct ns1__B1
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__B1InputParams *_params;	/* optional element of type ns1:B1InputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__B2Response
#define SOAP_TYPE_ns1__B2Response (393)
/* ns1:B2Response */
struct ns1__B2Response
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__B2
#define SOAP_TYPE_ns1__B2 (394)
/* ns1:B2 */
struct ns1__B2
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREcounterResponse
#define SOAP_TYPE_ns1__base_USCOREcounterResponse (397)
/* ns1:base_counterResponse */
struct ns1__base_USCOREcounterResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREcounter
#define SOAP_TYPE_ns1__base_USCOREcounter (398)
/* ns1:base_counter */
struct ns1__base_USCOREcounter
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__base_USCOREcounterInputParams *_params;	/* optional element of type ns1:base_counterInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREz_USCOREvalueResponse
#define SOAP_TYPE_ns1__base_USCOREz_USCOREvalueResponse (401)
/* ns1:base_z_valueResponse */
struct ns1__base_USCOREz_USCOREvalueResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__base_USCOREz_USCOREvalue
#define SOAP_TYPE_ns1__base_USCOREz_USCOREvalue (402)
/* ns1:base_z_value */
struct ns1__base_USCOREz_USCOREvalue
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__base_USCOREz_USCOREvalueInputParams *_params;	/* optional element of type ns1:base_z_valueInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__kmer_USCOREtableResponse
#define SOAP_TYPE_ns1__kmer_USCOREtableResponse (405)
/* ns1:kmer_tableResponse */
struct ns1__kmer_USCOREtableResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__kmer_USCOREtable
#define SOAP_TYPE_ns1__kmer_USCOREtable (406)
/* ns1:kmer_table */
struct ns1__kmer_USCOREtable
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__kmer_USCOREtableInputParams *_params;	/* optional element of type ns1:kmer_tableInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__lda_USCOREbiasResponse
#define SOAP_TYPE_ns1__lda_USCOREbiasResponse (409)
/* ns1:lda_biasResponse */
struct ns1__lda_USCOREbiasResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__lda_USCOREbias
#define SOAP_TYPE_ns1__lda_USCOREbias (410)
/* ns1:lda_bias */
struct ns1__lda_USCOREbias
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__lda_USCOREbiasInputParams *_params;	/* optional element of type ns1:lda_biasInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__signature_Response
#define SOAP_TYPE_ns1__signature_Response (412)
/* ns1:signature-Response */
struct ns1__signature_Response
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__signature_
#define SOAP_TYPE_ns1__signature_ (413)
/* ns1:signature */
struct ns1__signature_
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__signatureInputParams *_params;	/* optional element of type ns1:signatureInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__scsResponse
#define SOAP_TYPE_ns1__scsResponse (416)
/* ns1:scsResponse */
struct ns1__scsResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__scs
#define SOAP_TYPE_ns1__scs (417)
/* ns1:scs */
struct ns1__scs
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__scsInputParams *_params;	/* optional element of type ns1:scsInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__leading_USCOREstrandResponse
#define SOAP_TYPE_ns1__leading_USCOREstrandResponse (419)
/* ns1:leading_strandResponse */
struct ns1__leading_USCOREstrandResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__leading_USCOREstrand
#define SOAP_TYPE_ns1__leading_USCOREstrand (420)
/* ns1:leading_strand */
struct ns1__leading_USCOREstrand
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__S_USCOREvalueResponse
#define SOAP_TYPE_ns1__S_USCOREvalueResponse (423)
/* ns1:S_valueResponse */
struct ns1__S_USCOREvalueResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__S_USCOREvalue
#define SOAP_TYPE_ns1__S_USCOREvalue (424)
/* ns1:S_value */
struct ns1__S_USCOREvalue
{
	char *_sequence;	/* optional element of type xsd:string */
	struct ns1__S_USCOREvalueInputParams *_params;	/* optional element of type ns1:S_valueInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__helpResponse
#define SOAP_TYPE_ns1__helpResponse (426)
>>>>>>> 1.0.0-beta
/* ns1:helpResponse */
struct ns1__helpResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__help
<<<<<<< HEAD
#define SOAP_TYPE_ns1__help (385)
=======
#define SOAP_TYPE_ns1__help (427)
>>>>>>> 1.0.0-beta
/* ns1:help */
struct ns1__help
{
	char *_keywords;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__hydropathyResponse
<<<<<<< HEAD
#define SOAP_TYPE_ns1__hydropathyResponse (389)
=======
#define SOAP_TYPE_ns1__hydropathyResponse (431)
>>>>>>> 1.0.0-beta
/* ns1:hydropathyResponse */
struct ns1__hydropathyResponse
{
	float *_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns1__hydropathy
<<<<<<< HEAD
#define SOAP_TYPE_ns1__hydropathy (390)
=======
#define SOAP_TYPE_ns1__hydropathy (432)
>>>>>>> 1.0.0-beta
/* ns1:hydropathy */
struct ns1__hydropathy
{
	char *_sequence;	/* optional element of type xsd:string */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
<<<<<<< HEAD
#define SOAP_TYPE_SOAP_ENV__Header (391)
=======
#define SOAP_TYPE_SOAP_ENV__Header (433)
>>>>>>> 1.0.0-beta
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
<<<<<<< HEAD
#define SOAP_TYPE_SOAP_ENV__Code (392)
=======
#define SOAP_TYPE_SOAP_ENV__Code (434)
>>>>>>> 1.0.0-beta
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
<<<<<<< HEAD
#define SOAP_TYPE_SOAP_ENV__Detail (394)
=======
#define SOAP_TYPE_SOAP_ENV__Detail (436)
>>>>>>> 1.0.0-beta
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
<<<<<<< HEAD
#define SOAP_TYPE_SOAP_ENV__Reason (397)
=======
#define SOAP_TYPE_SOAP_ENV__Reason (439)
>>>>>>> 1.0.0-beta
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
<<<<<<< HEAD
#define SOAP_TYPE_SOAP_ENV__Fault (398)
=======
#define SOAP_TYPE_SOAP_ENV__Fault (440)
>>>>>>> 1.0.0-beta
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns1__codon_USCOREmva(struct soap*, char *_sequence, struct ns1__codon_USCOREmvaInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__P2(struct soap*, char *_sequence, struct ns1__P2InputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__w_USCOREvalue(struct soap*, char *_sequence, struct ns1__w_USCOREvalueInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__splitprintseq(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__median(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__find_USCOREori_USCOREter(struct soap*, char *_sequence, struct ns1__find_USCOREori_USCOREterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__plasmid_USCOREmap(struct soap*, char *_sequence, struct ns1__plasmid_USCOREmapInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__sum(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__nucleotide_USCOREperiodicity(struct soap*, char *_sequence, struct ns1__nucleotide_USCOREperiodicityInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__variance(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__amino_USCOREinfo(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__circular_USCOREmap(struct soap*, char *_sequence, struct ns1__circular_USCOREmapInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__togoWS(struct soap*, char *_query, struct ns1__togoWSInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__translate(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__phx(struct soap*, char *_sequence, struct ns1__phxInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__icdi(struct soap*, char *_sequence, struct ns1__icdiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__enc(struct soap*, char *_sequence, struct ns1__encInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__fop(struct soap*, char *_sequence, struct ns1__fopInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__bui(struct soap*, char *_sequence, struct ns1__buiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__dist_USCOREin_USCOREcc(struct soap*, char *_sequence, int _position1, int _position2, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__find_USCOREdnaAbox(struct soap*, char *_sequence, struct ns1__find_USCOREdnaAboxInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__ttest(struct soap*, struct arrayIn *_array1, struct arrayIn *_array2, struct ns1__ttestInputParams *_params, struct ns1__ttestResponse *_param_1);

SOAP_FMAC5 int SOAP_FMAC6 ns1__seq2png(struct soap*, char *_sequence, struct ns1__seq2pngInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__amino_USCOREcounter(struct soap*, char *_sequence, struct ns1__amino_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__aaui(struct soap*, char *_sequence, struct ns1__aauiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__codon_USCOREcompiler(struct soap*, char *_sequence, struct ns1__codon_USCOREcompilerInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__over_USCORElapping_USCOREfinder(struct soap*, char *_sequence, struct ns1__over_USCORElapping_USCOREfinderInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__Ew(struct soap*, char *_sequence, struct ns1__EwInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__base_USCORErelative_USCOREentropy(struct soap*, char *_sequence, struct ns1__base_USCORErelative_USCOREentropyInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__view_USCOREcds(struct soap*, char *_sequence, struct ns1__view_USCOREcdsInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__query_USCOREstrand(struct soap*, char *_sequence, char *_position, struct ns1__query_USCOREstrandInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__genomicskew(struct soap*, char *_sequence, struct ns1__genomicskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__filter_USCOREcds_USCOREby_USCOREatg(struct soap*, char *_sequence, struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams *_params, struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 ns1__gcsi(struct soap*, char *_sequence, struct ns1__gcsiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__cai(struct soap*, char *_sequence, struct ns1__caiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__maxdex(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__max(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__query_USCOREarm(struct soap*, char *_sequence, int _position, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__mindex(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__peptide_USCOREmass(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__consensus_USCOREz(struct soap*, struct arrayIn *_array_USCOREseq, struct ns1__consensus_USCOREzInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__genome_USCOREmap(struct soap*, char *_sequence, struct ns1__genome_USCOREmapInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__longest_USCOREORF(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__rep_USCOREori_USCOREter(struct soap*, char *_sequence, struct ns1__rep_USCOREori_USCOREterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__calc_USCOREpI(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__DoubleHelix(struct soap*, char *_sequence, struct ns1__DoubleHelixInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__base_USCOREentropy(struct soap*, char *_sequence, struct ns1__base_USCOREentropyInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__to_USCOREfasta(struct soap*, char *_sequence, struct ns1__to_USCOREfastaInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__find_USCOREdif(struct soap*, char *_sequence, struct ns1__find_USCOREdifInputParams *_params, struct ns1__find_USCOREdifResponse *_param_3);

SOAP_FMAC5 int SOAP_FMAC6 ns1__cbi(struct soap*, char *_sequence, struct ns1__cbiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__genes_USCOREfrom_USCOREori(struct soap*, char *_sequence, char *_direction, struct ns1__genes_USCOREfrom_USCOREoriInputParams *_params, struct ns1__genes_USCOREfrom_USCOREoriResponse *_param_4);

SOAP_FMAC5 int SOAP_FMAC6 ns1__geneskew(struct soap*, char *_sequence, struct ns1__geneskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__standard_USCOREdeviation(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__cor(struct soap*, struct arrayIn *_array1, struct arrayIn *_array2, struct ns1__corInputParams *_params, struct ns1__corResponse *_param_5);

SOAP_FMAC5 int SOAP_FMAC6 ns1__cumulative(struct soap*, struct arrayIn *_array, struct ns1__cumulativeResponse *_param_6);

SOAP_FMAC5 int SOAP_FMAC6 ns1__delta_USCOREenc(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__delta_USCOREgcskew(struct soap*, char *_sequence, struct ns1__delta_USCOREgcskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__molecular_USCOREweight(struct soap*, char *_sequence, struct ns1__molecular_USCOREweightInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__gcskew(struct soap*, char *_sequence, struct ns1__gcskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__genome_USCOREmap3(struct soap*, char *_sequence, struct ns1__genome_USCOREmap3InputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__seqinfo(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__signature(struct soap*, char *_sequence, struct ns1__signatureInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__base_USCOREinformation_USCOREcontent(struct soap*, char *_sequence, struct ns1__base_USCOREinformation_USCOREcontentInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__dnawalk(struct soap*, char *_sequence, struct ns1__dnawalkInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__find_USCOREter(struct soap*, char *_sequence, struct ns1__find_USCOREterInputParams *_params, struct ns1__find_USCOREterResponse *_param_7);

SOAP_FMAC5 int SOAP_FMAC6 ns1__shuffleseq(struct soap*, char *_sequence, struct ns1__shuffleseqInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__oligomer_USCOREsearch(struct soap*, char *_sequence, char *_oligomer, struct ns1__oligomer_USCOREsearchInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__find_USCOREpattern(struct soap*, char *_sequence, char *_pattern, struct ns1__find_USCOREpatternInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__gcwin(struct soap*, char *_sequence, struct ns1__gcwinInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__oligomer_USCOREcounter(struct soap*, char *_sequence, char *_oligomer, struct ns1__oligomer_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__codon_USCOREusage(struct soap*, char *_sequence, struct ns1__codon_USCOREusageInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__min(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__find_USCOREiteron(struct soap*, char *_sequence, struct ns1__find_USCOREiteronInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__complement(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__mean(struct soap*, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__codon_USCOREcounter(struct soap*, char *_sequence, struct ns1__codon_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__entrez(struct soap*, char *_database, char *_query, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__palindrome(struct soap*, char *_sequence, struct ns1__palindromeInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__least_USCOREsquares_USCOREfit(struct soap*, struct arrayIn *_array, struct ns1__least_USCOREsquares_USCOREfitResponse *_param_8);

SOAP_FMAC5 int SOAP_FMAC6 ns1__dinuc(struct soap*, char *_sequence, struct ns1__dinucInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__cgr(struct soap*, char *_sequence, struct ns1__cgrInputParams *_params, char **_result);

<<<<<<< HEAD
=======
SOAP_FMAC5 int SOAP_FMAC6 ns1__B1(struct soap*, char *_sequence, struct ns1__B1InputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__B2(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__base_USCOREcounter(struct soap*, char *_sequence, struct ns1__base_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__base_USCOREz_USCOREvalue(struct soap*, char *_sequence, struct ns1__base_USCOREz_USCOREvalueInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__kmer_USCOREtable(struct soap*, char *_sequence, struct ns1__kmer_USCOREtableInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__lda_USCOREbias(struct soap*, char *_sequence, struct ns1__lda_USCOREbiasInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__signature_(struct soap*, char *_sequence, struct ns1__signatureInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__scs(struct soap*, char *_sequence, struct ns1__scsInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__leading_USCOREstrand(struct soap*, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__S_USCOREvalue(struct soap*, char *_sequence, struct ns1__S_USCOREvalueInputParams *_params, char **_result);

>>>>>>> 1.0.0-beta
SOAP_FMAC5 int SOAP_FMAC6 ns1__help(struct soap*, char *_keywords, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__hydropathy(struct soap*, char *_sequence, float *_result);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__codon_USCOREmva(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__P2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__w_USCOREvalue(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__splitprintseq(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__median(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__find_USCOREori_USCOREter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__plasmid_USCOREmap(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__sum(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__nucleotide_USCOREperiodicity(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__variance(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__amino_USCOREinfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__circular_USCOREmap(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__togoWS(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__translate(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__phx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__icdi(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__enc(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__fop(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__bui(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__dist_USCOREin_USCOREcc(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__find_USCOREdnaAbox(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__ttest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__seq2png(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__amino_USCOREcounter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__aaui(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__codon_USCOREcompiler(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__over_USCORElapping_USCOREfinder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__Ew(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__base_USCORErelative_USCOREentropy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__view_USCOREcds(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__query_USCOREstrand(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__genomicskew(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__filter_USCOREcds_USCOREby_USCOREatg(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__gcsi(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cai(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__maxdex(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__max(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__query_USCOREarm(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__mindex(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__peptide_USCOREmass(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__consensus_USCOREz(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__genome_USCOREmap(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__longest_USCOREORF(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__rep_USCOREori_USCOREter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__calc_USCOREpI(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__DoubleHelix(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__base_USCOREentropy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__to_USCOREfasta(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__find_USCOREdif(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cbi(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__genes_USCOREfrom_USCOREori(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__geneskew(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__standard_USCOREdeviation(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cor(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cumulative(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__delta_USCOREenc(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__delta_USCOREgcskew(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__molecular_USCOREweight(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__gcskew(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__genome_USCOREmap3(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__seqinfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__signature(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__base_USCOREinformation_USCOREcontent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__dnawalk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__find_USCOREter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__shuffleseq(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__oligomer_USCOREsearch(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__find_USCOREpattern(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__gcwin(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__oligomer_USCOREcounter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__codon_USCOREusage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__min(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__find_USCOREiteron(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__complement(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__mean(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__codon_USCOREcounter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__entrez(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__palindrome(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__least_USCOREsquares_USCOREfit(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__dinuc(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cgr(struct soap*);

<<<<<<< HEAD
=======
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__B1(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__B2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__base_USCOREcounter(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__base_USCOREz_USCOREvalue(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__kmer_USCOREtable(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__lda_USCOREbias(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__signature_(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__scs(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__leading_USCOREstrand(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__S_USCOREvalue(struct soap*);

>>>>>>> 1.0.0-beta
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__help(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__hydropathy(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__codon_USCOREmva(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__codon_USCOREmvaInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__P2(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__P2InputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__w_USCOREvalue(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__w_USCOREvalueInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__splitprintseq(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__median(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__find_USCOREori_USCOREter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__find_USCOREori_USCOREterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__plasmid_USCOREmap(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__plasmid_USCOREmapInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__sum(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__nucleotide_USCOREperiodicity(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__nucleotide_USCOREperiodicityInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__variance(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__amino_USCOREinfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__circular_USCOREmap(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__circular_USCOREmapInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__togoWS(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_query, struct ns1__togoWSInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__translate(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__phx(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__phxInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__icdi(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__icdiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__enc(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__encInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__fop(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__fopInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__bui(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__buiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dist_USCOREin_USCOREcc(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, int _position1, int _position2, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__find_USCOREdnaAbox(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__find_USCOREdnaAboxInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__ttest(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array1, struct arrayIn *_array2, struct ns1__ttestInputParams *_params, struct ns1__ttestResponse *_param_1);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__seq2png(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__seq2pngInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__amino_USCOREcounter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__amino_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__aaui(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__aauiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__codon_USCOREcompiler(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__codon_USCOREcompilerInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__over_USCORElapping_USCOREfinder(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__over_USCORElapping_USCOREfinderInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Ew(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__EwInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__base_USCORErelative_USCOREentropy(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__base_USCORErelative_USCOREentropyInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__view_USCOREcds(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__view_USCOREcdsInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__query_USCOREstrand(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char *_position, struct ns1__query_USCOREstrandInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__genomicskew(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__genomicskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__filter_USCOREcds_USCOREby_USCOREatg(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__filter_USCOREcds_USCOREby_USCOREatgInputParams *_params, struct ns1__filter_USCOREcds_USCOREby_USCOREatgResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__gcsi(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__gcsiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cai(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__caiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__maxdex(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__max(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__query_USCOREarm(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, int _position, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__mindex(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__peptide_USCOREmass(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__consensus_USCOREz(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array_USCOREseq, struct ns1__consensus_USCOREzInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__genome_USCOREmap(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__genome_USCOREmapInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__longest_USCOREORF(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__rep_USCOREori_USCOREter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__rep_USCOREori_USCOREterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__calc_USCOREpI(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__DoubleHelix(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__DoubleHelixInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__base_USCOREentropy(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__base_USCOREentropyInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__to_USCOREfasta(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__to_USCOREfastaInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__find_USCOREdif(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__find_USCOREdifInputParams *_params, struct ns1__find_USCOREdifResponse *_param_3);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cbi(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__cbiInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__genes_USCOREfrom_USCOREori(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char *_direction, struct ns1__genes_USCOREfrom_USCOREoriInputParams *_params, struct ns1__genes_USCOREfrom_USCOREoriResponse *_param_4);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__geneskew(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__geneskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__standard_USCOREdeviation(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cor(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array1, struct arrayIn *_array2, struct ns1__corInputParams *_params, struct ns1__corResponse *_param_5);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cumulative(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, struct ns1__cumulativeResponse *_param_6);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__delta_USCOREenc(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__delta_USCOREgcskew(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__delta_USCOREgcskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__molecular_USCOREweight(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__molecular_USCOREweightInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__gcskew(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__gcskewInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__genome_USCOREmap3(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__genome_USCOREmap3InputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__seqinfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__signature(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__signatureInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__base_USCOREinformation_USCOREcontent(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__base_USCOREinformation_USCOREcontentInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dnawalk(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__dnawalkInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__find_USCOREter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__find_USCOREterInputParams *_params, struct ns1__find_USCOREterResponse *_param_7);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__shuffleseq(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__shuffleseqInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__oligomer_USCOREsearch(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char *_oligomer, struct ns1__oligomer_USCOREsearchInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__find_USCOREpattern(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char *_pattern, struct ns1__find_USCOREpatternInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__gcwin(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__gcwinInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__oligomer_USCOREcounter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char *_oligomer, struct ns1__oligomer_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__codon_USCOREusage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__codon_USCOREusageInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__min(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__find_USCOREiteron(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__find_USCOREiteronInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__complement(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__mean(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__codon_USCOREcounter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__codon_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__entrez(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_database, char *_query, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__palindrome(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__palindromeInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__least_USCOREsquares_USCOREfit(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct arrayIn *_array, struct ns1__least_USCOREsquares_USCOREfitResponse *_param_8);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dinuc(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__dinucInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cgr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__cgrInputParams *_params, char **_result);

<<<<<<< HEAD
=======
SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__B1(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__B1InputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__B2(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__base_USCOREcounter(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__base_USCOREcounterInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__base_USCOREz_USCOREvalue(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__base_USCOREz_USCOREvalueInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__kmer_USCOREtable(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__kmer_USCOREtableInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__lda_USCOREbias(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__lda_USCOREbiasInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__signature_(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__signatureInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__scs(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__scsInputParams *_params, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__leading_USCOREstrand(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__S_USCOREvalue(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, struct ns1__S_USCOREvalueInputParams *_params, char **_result);

>>>>>>> 1.0.0-beta
SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__help(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_keywords, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__hydropathy(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_sequence, float *_result);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
