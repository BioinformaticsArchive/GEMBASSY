                                   gshuffleseq
Function

   Create randomized sequence with conserved k-mer composition

Description

   Shuffle and randomize the given sequence, conserving the nucleotide/peptide
   k-mer content of the original sequence. 

   For k=1, i.e. shuffling sequencing preserving single nucleotide composition, 
   Fisher-Yates Algorithm is employed. 

   For k>1, shuffling preserves all k-mers (all k where k=1~k). For example,
   k=3 preserves all triplet, doublet, and single nucleotide composition. 
   Algorithm for k-mer preserved shuffling is non-trivial, which is solved
   by graph theoretical approach with Eulerian random walks in the graph of 
   k-1-mers. See references 3-5 for details of this algorithm. 
   
   G-language SOAP service is provided by the
   Institute for Advanced Biosciences, Keio University.
   The original web service is located at the following URL:

   http://www.g-language.org/wiki/soap

   WSDL(RPC/Encoded) file is located at:

   http://soap.g-language.org/g-language.wsdl

   Documentation on G-language Genome Analysis Environment methods are
   provided at the Document Center

   http://ws.g-language.org/gdoc/

Usage

   Here is a sample session with gshuffleseq

% gshuffleseq refseqn:NC_000913
Create randomized sequence with conserved k-mer composition
Output filename [gshuffleseq.nc_000913.csv]:
Died: Unknown qualifier -accid

Command line arguments

   Standard (Mandatory) qualifiers:
  [-sequence]          seqall     Sequence(s) filename and optional format, or
                                  reference (input USA)

   Additional (Optional) qualifiers: (none)
   Advanced (Unprompted) qualifiers:
   -k                  integer    [1] k-mer to preserve composition (Any
                                  integer value)
   -outseq             seqout     [<sequence>.<format>] Sequence filename and
                                  optional format (output USA)

   General qualifiers:
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose

Input file format

   gshuffleseq reads nucleotide sequences.

Output file format

   The output from gshuffleseq is to .

Data files

   None.

Notes

   None.

References

   Fisher R.A. and Yates F. (1938) "Example 12", Statistical Tables, London

   Durstenfeld R. (1964) "Algorithm 235: Random permutation", CACM 7(7):420

   Jiang M., Anderson J., Gillespie J., and Mayne M. (2008) "uShuffle: 
      a useful tool for shuffling biological sequences while preserving the k-let
      counts", BMC Bioinformatics 9:192

   Kandel D., Matias Y., Unver R., and Winker P. (1996) "Shuffling biological 
      sequences", Discrete Applied Mathematics 71(1-3):171-185  

   Propp J.G. and Wilson D.B. (1998) "How to get a perfectly random sample 
      from a generic Markov chain and generate a random spanning tree of a 
      directed graph", Journal of Algorithms 27(2):170-217

   Arakawa, K., Mori, K., Ikeda, K., Matsuzaki, T., Konayashi, Y., and
      Tomita, M. (2003) G-language Genome Analysis Environment: A Workbench
      for Nucleotide Sequence Data Mining, Bioinformatics, 19, 305-306.

   Arakawa, K. and Tomita, M. (2006) G-language System as a Platfor for
      large-scale analysis of high-throughput omics data, J. Pest Sci.,
      31, 7.

   Arakawa, K., Kido, N., Oshita, K., Tomita, M. (2010) G-language Genome
      Analysis Environment with REST and SOAP Wev Service Interfaces,
      Nucleic Acids Res., 38, W700-W705.

Warnings

None.
Diagnostic Error Messages

   None.

Exit status

   It always exits with a status of 0.

Known bugs

   None.

See also

   shuffleseq Shuffles a set of sequences maintaining composition

Author(s)

   Hidetoshi Itaya (celery@g-language.org)
   Institute for Advanced Biosciences, Keio University
   252-8520 Japan

   Kazuharu Arakawa (gaou@sfc.keio.ac.jp)
   Institute for Advanced Biosciences, Keio University
   252-8520 Japan

History

   2012 - Written by Hidetoshi Itaya

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.

Comments

   None.

