<<<<<<< HEAD
                                   gquerystrand
=======
                                gquery_strand
>>>>>>> 1.0.0-beta
Function

   Get the strand name (leading or lagging) from the given position

Description

   Given a position and strand information (direct or complement), 
   returns whether the specified position is in the leading or lagging strand.

<<<<<<< HEAD
=======
  
>>>>>>> 1.0.0-beta
   G-language SOAP service is provided by the
   Institute for Advanced Biosciences, Keio University.
   The original web service is located at the following URL:

   http://www.g-language.org/wiki/soap

   WSDL(RPC/Encoded) file is located at:

   http://soap.g-language.org/g-language.wsdl

   Documentation on G-language Genome Analysis Environment methods are
   provided at the Document Center

   http://ws.g-language.org/gdoc/

Usage

<<<<<<< HEAD
   Here is a sample session with gquerystrand

% gquerystrand 
Get the strand name (leading or lagging) from the given position
Input nucleotide sequence: nucleotideSample.fna
Position to query: 1234
leading

Command line argumants

   Standard (Mandatory) qualifiers:
  [-sequence]          sequence   Nucleotide sequence filename and optional
                                  format, or reference (input USA)
  [-position]          string     Position to query (Any string)
=======
   Here is a sample session with gquery_strand

% gquery_strand  NC_000913.gbk 1234
Get the strand name (leading or lagging) from the given position
Output filename [*.gquery_strand]:


   Creates *.gquery_strand
   Output example is prepared in the data directory

Command line arguments

Standard (Mandatory) qualifiers (* if not always prompted):
  [-sequence]          seqall     Nucleotide sequence(s) filename and optional
                                  format, or reference (input USA)
  [-position]          string     [0] Position to query (Any string)
<<<<<<< HEAD
>>>>>>> 1.0.0-beta
=======
*  -outfile            outfile    [*.gquery_strand] Output file name
>>>>>>> devel

   Additional (Optional) qualifiers: (none)
   Advanced (Unprompted) qualifiers:
   -direction          string     [direct] Strand of the querying position
                                  either 'direct' or 'complement' (Any string)
<<<<<<< HEAD
<<<<<<< HEAD

Input file format

   gquerystrand reads a genome sequence as input.

Ouptput file format

   The output from gquerystrand is to standard output.
=======
   -accid              boolean    [0] Include to use sequence accession ID as
                                  query
=======
   -accid              string     Include to use sequence accession ID as
                                  query (Any string)
<<<<<<< HEAD
>>>>>>> 1.0.0
=======
   -show               toggle     [N] Include to dump result to stdout
>>>>>>> devel

   General qualifiers:
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose


Input file format

   gquery_strand reads nucleotide sequences.

Output file format

<<<<<<< HEAD
   The output from gquery_strand is to standard output.
>>>>>>> 1.0.0-beta
=======
   The output from gquery_strand is to a file or stdout.
>>>>>>> devel

Data files

   None.

Notes

   None.

<<<<<<< HEAD
Refrences
=======
References
>>>>>>> 1.0.0-beta

   Arakawa, K., Mori, K., Ikeda, K., Matsuzaki, T., Konayashi, Y., and
      Tomita, M. (2003) G-language Genome Analysis Environment: A Workbench
      for Nucleotide Sequence Data Mining, Bioinformatics, 19, 305-306.

   Arakawa, K. and Tomita, M. (2006) G-language System as a Platfor for
      large-scale analysis of high-throughput omics data, J. Pest Sci.,
<<<<<<< HEAD
      31, 7.                     
=======
      31, 7.
>>>>>>> 1.0.0-beta

   Arakawa, K., Kido, N., Oshita, K., Tomita, M. (2010) G-language Genome
      Analysis Environment with REST and SOAP Wev Service Interfaces,
      Nucleic Acids Res., 38, W700-W705.

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with a status of 0.

Known bugs

   None.

See also

<<<<<<< HEAD
<<<<<<< HEAD
   gfindoriter  - Predict the replication origin and terminus in bacterial
                  genomes
   ggcsi        - GC Skew Index: an index for strand-specific mutational bias
   ggcskew      - Calculate the GC skew of the given genome
   ggcwin       - Calculate the GC content along the given genome
   ggeneskew    - Calculate the gene strand bias of the given genome
   ggenomicskew - Calculate the GC skew in different regions of the given
                  genome
   gqueryarm    - Get the replication arm name (left or right) from the given
                  position
   greporiter   - Get the positions of replication origin and terminus
=======

>>>>>>> 1.0.0-beta
=======
   gquery_arm    Get the replication arm name (left or right) from the given
                 position

<<<<<<< HEAD
>>>>>>> 1.0.0

=======
>>>>>>> devel
Author(s)

   Hidetoshi Itaya (celery@g-language.org)
   Institute for Advanced Biosciences, Keio University
   252-8520 Japan

   Kazuharu Arakawa (gaou@sfc.keio.ac.jp)

History

   2012 - Written by Hidetoshi Itaya

Target users

   This program is intended to be used by everyone and everything, from
<<<<<<< HEAD
   naive users to embedded scrips.
=======
   naive users to embedded scripts.
>>>>>>> 1.0.0-beta

Comments

   None.

