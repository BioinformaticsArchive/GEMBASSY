                                     gb1
Function

   Calculate strand bias of bacterial genome using B1 index

Description

   This method calculate strand bias of bacterial genome using B1 index,
   first proposed by Lobry and Sueoka (2002), and further extended by 
   Rocha et al. (2006). Basic idea of B1 index is to calculate the 
   distance between the two strands, when the leading and lagging strands
   are plotted in a coordinate system with axes representing G/(G+C) and A/(A+T),
   using the third codon position of genes. This index measures the degree of 
   replication-induced bias from Chargaff's second parity rule.

   Rocha et al. modified B1 index to only use >fourfold degenerate codons,
   and to use T/(A+T) in place of A/(A+T).

 
   G-language SOAP service is provided by the
   Institute for Advanced Biosciences, Keio University.
   The original web service is located at the following URL:

   http://www.g-language.org/wiki/soap

   WSDL(RPC/Encoded) file is located at:

   http://soap.g-language.org/g-language.wsdl

   Documentation on G-language Genome Analysis Environment methods are
   provided at the Document Center

   http://ws.g-language.org/gdoc/

Usage

   Here is a sample session with gb1

% gb1  NC_000913.gbk
Calculate strand bias of bacterial genome using B1 index
Output filename [*.gb1]:Died: Qualifier '-show' not found



   Creates *.gb1
   Output example is prepared in the data directory

Command line arguments

Standard (Mandatory) qualifiers:
  [-sequence]          seqall     Nucleotide sequence(s) filename and optional
                                  format, or reference (input USA)
   -outfile            outfile    [*.gb1] Output file name

   Additional (Optional) qualifiers: (none)
   Advanced (Unprompted) qualifiers:
   -method             string     [rocha] Choose method of 'lobry' or 'rocha'
                                  (Any string)
   -accid              string     Include to use sequence accession ID as
                                  query (Any string)

   General qualifiers:
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose


Input file format

   gb1 reads nucleotide sequences.

Output file format

   The output from gb1 is to a file or stdout.

Data files

   None.

Notes

   None.

References

   Lobry JR and Sueoka N (2002) "Asymmetric directional mutation pressures in
      bacteria", Genome Biology, 3(10):0058

   Rocha EPC et al. (2006) "Similar compositional biases are caused by very
      different mutational effects", Genome Research, 16:1537-1547

   Arakawa, K., Mori, K., Ikeda, K., Matsuzaki, T., Konayashi, Y., and
      Tomita, M. (2003) G-language Genome Analysis Environment: A Workbench
      for Nucleotide Sequence Data Mining, Bioinformatics, 19, 305-306.

   Arakawa, K. and Tomita, M. (2006) G-language System as a Platfor for
      large-scale analysis of high-throughput omics data, J. Pest Sci.,
      31, 7.

   Arakawa, K., Kido, N., Oshita, K., Tomita, M. (2010) G-language Genome
      Analysis Environment with REST and SOAP Wev Service Interfaces,
      Nucleic Acids Res., 38, W700-W705.

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with a status of 0.

Known bugs

   None.

See also

   gb2           Calculate strand bias of bacterial genome using B2 index
   gdelta_gcskew Calculate strand bias of bacterial genome using delta GC skew
                 index
   ggcsi         GC Skew Index: an index for strand-specefic mutational bias
   glda_bias     Calculate strand bias of bacterial genome using linear
                 discriminant analysis (LDA)

Author(s)

   Hidetoshi Itaya (celery@g-language.org)
   Institute for Advanced Biosciences, Keio University
   252-8520 Japan

   Kazuharu Arakawa (gaou@sfc.keio.ac.jp)

History

   2012 - Written by Hidetoshi Itaya

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.

Comments

   None.

